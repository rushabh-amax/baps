{
  "version": 3,
  "sources": ["../../../../../apps/baps/baps/public/js/theme_switcher.js", "../../../../../apps/baps/baps/public/js/login.bundle.js", "../../../../../apps/baps/baps/public/js/customJs.bundle.js", "../../../../../apps/baps/baps/public/js/breadcrubOverride.js"],
  "sourcesContent": ["frappe.provide(\"frappe.ui\");\r\n\r\nfrappe.ui.ThemeSwitcher = class CustomThemeSwitcher extends frappe.ui.ThemeSwitcher {\r\n\r\n    fetch_themes() {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis.themes = [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"light\",\r\n\t\t\t\t\tlabel:(\"Frappe Light\"),\r\n\t\t\t\t\tinfo:(\"Light Theme\"),\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"dark\",\r\n\t\t\t\t\tlabel:\"Timeless Night\",\r\n\t\t\t\t\tinfo:\"Dark Theme\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"automatic\",\r\n\t\t\t\t\tlabel:\"Automatic\",\r\n\t\t\t\t\tinfo:\"Uses system's theme to switch between light and dark mode\",\r\n\t\t\t\t},\r\n                {\r\n                    name:\"baps\",\r\n                    label: \"baps\",\r\n                    info: \"baps Theme\"\r\n                }\r\n              \r\n\t\t\t];\r\n\r\n\t\t\tresolve(this.themes);\r\n\t\t});\r\n\t}\r\n}", "// =============================\r\n// Custom Password Toggle (No jQuery)\r\n// =============================\r\n\r\n// SVG Icons\r\nconst eyeSVG = `\r\n<svg class=\"icon-eye\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <path d=\"M15.0007 12C15.0007 13.6569 13.6576 15 12.0007 15C10.3439 15 9.00073 13.6569 9.00073 12C9.00073 10.3431 10.3439 9 12.0007 9C13.6576 9 15.0007 10.3431 15.0007 12Z\" stroke=\"gray\" stroke-width=\"1.4\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n  <path d=\"M12.0012 5C7.52354 5 3.73326 7.94288 2.45898 12C3.73324 16.0571 7.52354 19 12.0012 19C16.4788 19 20.2691 16.0571 21.5434 12C20.2691 7.94291 16.4788 5 12.0012 5Z\" stroke=\"gray\" stroke-width=\"1.4\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n</svg>\r\n`;\r\n\r\nconst eyeSlashSVG = `\r\n<svg class=\"icon-eye-slash\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <path d=\"M2.99902 3L20.999 21M9.8433 9.91364C9.32066 10.4536 8.99902 11.1892 8.99902 12C8.99902 13.6569 10.3422 15 11.999 15C12.8215 15 13.5667 14.669 14.1086 14.133M6.49902 6.64715C4.59972 7.90034 3.15305 9.78394 2.45703 12C3.73128 16.0571 7.52159 19 11.9992 19C13.9881 19 15.8414 18.4194 17.3988 17.4184M10.999 5.04939C11.328 5.01673 11.6617 5 11.9992 5C16.4769 5 20.2672 7.94291 21.5414 12C21.2607 12.894 20.8577 13.7338 20.3522 14.5\" stroke=\"gray\" stroke-width=\"1.4\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n</svg>\r\n`;\r\n\r\n// Add a custom toggle button next to password inputs\r\nfunction addCustomPasswordToggle(input) {\r\n  console.log(\"in login file : in custom toggle funton\");\r\n  // Skip if already added\r\n  if (input.parentNode.querySelector(\".custom-toggle-password\")) return;\r\n\r\n  const wrapper = input.parentNode;\r\n  const button = document.createElement(\"span\");\r\n  button.classList.add(\"custom-toggle-password\");\r\n  button.style.cursor = \"pointer\";\r\n  button.style.marginLeft = \"8px\";\r\n  button.innerHTML = eyeSlashSVG;\r\n\r\n  wrapper.appendChild(button);\r\n\r\n  console.log(\"in login file : apped\");\r\n\r\n\r\n  button.addEventListener(\"click\", () => {\r\n    if (input.type === \"password\") {\r\n      input.type = \"text\";\r\n      button.innerHTML = eyeSVG;\r\n    } else {\r\n      input.type = \"password\";\r\n      button.innerHTML = eyeSlashSVG;\r\n    }\r\n  });\r\n}\r\n\r\n// =============================\r\n// Boot Script\r\n// =============================\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  // Hide the original Frappe toggle\r\n  const style = document.createElement(\"style\");\r\n  style.innerHTML = `\r\n    .toggle-password { display: none !important; }\r\n    .custom-toggle-password svg {\r\n      vertical-align: middle;\r\n    }\r\n  `;\r\n  document.head.appendChild(style);\r\n\r\n  // Add to existing password inputs\r\n  document.querySelectorAll('input[type=\"password\"]').forEach(addCustomPasswordToggle);\r\n\r\n  // Add observer for dynamically added password fields\r\n  const observer = new MutationObserver(mutations => {\r\n    mutations.forEach(mutation => {\r\n      mutation.addedNodes.forEach(node => {\r\n        if (node.nodeType === 1) {\r\n          if (node.matches('input[type=\"password\"]')) {\r\n            addCustomPasswordToggle(node);\r\n          } else {\r\n            const inputs = node.querySelectorAll?.('input[type=\"password\"]') || [];\r\n            inputs.forEach(addCustomPasswordToggle);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  observer.observe(document.body, { childList: true, subtree: true });\r\n});\r\n\r\n\r\n", "// // function removePageTItles(){\r\n// //   const  pageTitle = document.querySelector(\".page-title\");\r\n// //     // Start observing changes in the body subtree\r\n// //   observer.observe(document.body, {\r\n// //     childList: true,\r\n// //     subtree: true,\r\n// //   });\r\n\r\n// // }\r\n// // document.addEventListener(\"DOMContentLoaded\", movePageHeadContent);\r\n\r\n// // sliding active bar for ERPNext form tabs (no frappe.ready)\r\n\r\n\r\n\r\n// // from-tab sliding effect\r\n\r\n// document.addEventListener('DOMContentLoaded', function () {\r\n//   function initSlidingTabs(ul) {\r\n//     if (!ul || ul.dataset.slidingTabsInitialized) return;\r\n//     ul.dataset.slidingTabsInitialized = '1';\r\n//     ul.style.position = ul.style.position || 'relative';\r\n\r\n//     // create the highlight bar\r\n//     const bar = document.createElement('div');\r\n//     bar.className = 'sliding-tab-bar';\r\n//     Object.assign(bar.style, {\r\n//       position: 'absolute',\r\n//       bottom: '0',\r\n//       height: '4px',\r\n//       background: 'var(--_primary-bg-color)',\r\n//       borderRadius: '1em 1em 0em 0em',\r\n//       transition: 'transform 200ms ease, width 200ms ease',\r\n//       left: '0',\r\n//       width: '0',\r\n//       zIndex: '1',\r\n//       pointerEvents: 'none'\r\n//     });\r\n//     ul.appendChild(bar);\r\n\r\n//     const update = () => {\r\n//       const active =\r\n//         ul.querySelector('.nav-link.active') ||\r\n//         ul.querySelector('.nav-link');\r\n//       if (!active) return;\r\n//       const linkRect = active.getBoundingClientRect();\r\n//       const ulRect = ul.getBoundingClientRect();\r\n//       const left = linkRect.left - ulRect.left + ul.scrollLeft;\r\n//       bar.style.width = linkRect.width + 'px';\r\n//       bar.style.transform = `translateX(${left}px)`;\r\n//     };\r\n\r\n//     // update on clicks (wait for bootstrap to toggle .active)\r\n//     ul.addEventListener('click', (e) => {\r\n//       const link = e.target.closest('.nav-link');\r\n//       if (link && ul.contains(link)) {\r\n//         setTimeout(update, 150);\r\n//       }\r\n//     });\r\n\r\n//     // update on resize\r\n//     window.addEventListener('resize', update);\r\n\r\n//     // observe active class changes & DOM changes inside the tabs\r\n//     const mo = new MutationObserver(() => update());\r\n//     mo.observe(ul, { subtree: true, childList: true, attributes: true, attributeFilter: ['class'] });\r\n\r\n//     // initial position\r\n//     setTimeout(update, 0);\r\n//   }\r\n\r\n//   function scanAndInit() {\r\n//     document.querySelectorAll('ul.form-tabs, ul.nav-tabs, #form-tabs').forEach(initSlidingTabs);\r\n//   }\r\n\r\n//   // initial scan\r\n//   scanAndInit();\r\n\r\n//   // ERPNext desk is SPA-like; watch for new forms/tabs injected later\r\n//   const bodyObserver = new MutationObserver(() => scanAndInit());\r\n//   bodyObserver.observe(document.body, { childList: true, subtree: true });\r\n\r\n//   // also rescan after Bootstrap tab show (BS4/BS5 attribute variants)\r\n//   document.addEventListener('click', (e) => {\r\n//     if (e.target.closest('a[data-toggle=\"tab\"], a[data-bs-toggle=\"tab\"]')) {\r\n//       setTimeout(scanAndInit, 200);\r\n//     }\r\n//   });\r\n// });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // from-tab sliding effect\r\n\r\n// document.addEventListener('DOMContentLoaded', function () {\r\n//   function initSlidingTabs(ul) {\r\n//     if (!ul || ul.dataset.slidingTabsInitialized) return;\r\n//     ul.dataset.slidingTabsInitialized = '1';\r\n//     ul.style.position = ul.style.position || 'relative';\r\n\r\n//     // create the highlight bar\r\n//     const bar = document.createElement('div');\r\n//     bar.className = 'sliding-tab-bar';\r\n//     Object.assign(bar.style, {\r\n//       position: 'absolute',\r\n//       bottom: '0',\r\n//       height: '4px',\r\n//       background: 'var(--_primary-bg-color)',\r\n//       borderRadius: '1em 1em 0em 0em',\r\n//       transition: 'transform 200ms ease, width 200ms ease',\r\n//       left: '0',\r\n//       width: '0',\r\n//       zIndex: '1',\r\n//       pointerEvents: 'none'\r\n//     });\r\n//     ul.appendChild(bar);\r\n\r\n//     const update = () => {\r\n//       const active =\r\n//         ul.querySelector('.nav-link.active') ||\r\n//         ul.querySelector('.nav-link');\r\n//       if (!active) return;\r\n//       const linkRect = active.getBoundingClientRect();\r\n//       const ulRect = ul.getBoundingClientRect();\r\n//       const left = linkRect.left - ulRect.left + ul.scrollLeft;\r\n//       bar.style.width = linkRect.width + 'px';\r\n//       bar.style.transform = `translateX(${left}px)`;\r\n//     };\r\n\r\n//     // update on clicks (wait for bootstrap to toggle .active)\r\n//     ul.addEventListener('click', (e) => {\r\n//       const link = e.target.closest('.nav-link');\r\n//       if (link && ul.contains(link)) {\r\n//         setTimeout(update, 150);\r\n//       }\r\n//     });\r\n\r\n//     // update on resize\r\n//     window.addEventListener('resize', update);\r\n\r\n//     // observe active class changes & DOM changes inside the tabs\r\n//     const mo = new MutationObserver(() => update());\r\n//     mo.observe(ul, { subtree: true, childList: true, attributes: true, attributeFilter: ['class'] });\r\n\r\n//     // initial position\r\n//     setTimeout(update, 0);\r\n//   }\r\n\r\n//   function scanAndInit() {\r\n//     document.querySelectorAll('ul.form-tabs, ul.nav-tabs, #form-tabs').forEach(initSlidingTabs);\r\n//   }\r\n\r\n//   // initial scan\r\n//   scanAndInit();\r\n\r\n//   // ERPNext desk is SPA-like; watch for new forms/tabs injected later\r\n//   const bodyObserver = new MutationObserver(() => scanAndInit());\r\n//   bodyObserver.observe(document.body, { childList: true, subtree: true });\r\n\r\n//   // also rescan after Bootstrap tab show (BS4/BS5 attribute variants)\r\n//   document.addEventListener('click', (e) => {\r\n//     if (e.target.closest('a[data-toggle=\"tab\"], a[data-bs-toggle=\"tab\"]')) {\r\n//       setTimeout(scanAndInit, 200);\r\n//     }\r\n//   });\r\n// });\r\n\r\n\r\n// // \r\n\r\n// // sidebar false\r\n// document.addEventListener(\"DOMContentLoaded\", function () {\r\n//   const sidebar = document.querySelector(\".sidebar\"); // your sidebar element\r\n//   const toggleBtn = document.querySelector(\".sidebar-toggle-btn\");\r\n//   const toggleIcon = toggleBtn.querySelector(\".sidebar-toggle-icon use\");\r\n\r\n//   // \u2705 Collapse by default\r\n//   sidebar.classList.add(\"collapsed\");\r\n//   toggleIcon.setAttribute(\"href\", \"#es-line-sidebar-expand\");\r\n\r\n//   // \u2705 Toggle on click\r\n//   toggleBtn.addEventListener(\"click\", function () {\r\n//     if (sidebar.classList.contains(\"collapsed\")) {\r\n//       // Expand\r\n//       sidebar.classList.remove(\"collapsed\");\r\n//       toggleIcon.setAttribute(\"href\", \"#es-line-sidebar-collapse\");\r\n//       console.log(\"collapsed sidebar\")\r\n//     } else {\r\n//       // Collapse\r\n//       sidebar.classList.add(\"collapsed\");\r\n//       toggleIcon.setAttribute(\"href\", \"#es-line-sidebar-expand\");\r\n//       console.log(\"expand  sidebar\")\r\n\r\n//     }\r\n//   });\r\n// });\r\n\r\n\r\n\r\n// function removePageTItles(){\r\n//   const  pageTitle = document.querySelector(\".page-title\");\r\n//     // Start observing changes in the body subtree\r\n//   observer.observe(document.body, {\r\n//     childList: true,\r\n//     subtree: true,\r\n//   });\r\n\r\n// }\r\n// document.addEventListener(\"DOMContentLoaded\", movePageHeadContent);\r\n\r\n// sliding active bar for ERPNext form tabs (no frappe.ready)\r\n\r\n\r\n\r\n// from-tab sliding effect\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n  function initSlidingTabs(ul) {\r\n    if (!ul || ul.dataset.slidingTabsInitialized) return;\r\n    ul.dataset.slidingTabsInitialized = '1';\r\n    ul.style.position = ul.style.position || 'relative';\r\n\r\n    // create the highlight bar\r\n    const bar = document.createElement('div');\r\n    bar.className = 'sliding-tab-bar';\r\n    Object.assign(bar.style, {\r\n      position: 'absolute',\r\n      bottom: '0',\r\n      height: '4px',\r\n      background: 'orange',\r\n      borderRadius: '1em 1em 0em 0em',\r\n      transition: 'transform 200ms ease, width 200ms ease',\r\n      left: '0',\r\n      width: '0',\r\n      zIndex: '1',\r\n      pointerEvents: 'none'\r\n    });\r\n    ul.appendChild(bar);\r\n    console.log(\"tab active slideer insterd\")\r\n\r\n    const update = () => {\r\n      const active =\r\n        ul.querySelector('.nav-link.active') ||\r\n        ul.querySelector('.nav-link');\r\n      if (!active) return;\r\n      const linkRect = active.getBoundingClientRect();\r\n      const ulRect = ul.getBoundingClientRect();\r\n      const left = linkRect.left - ulRect.left + ul.scrollLeft;\r\n      bar.style.width = linkRect.width + 'px';\r\n      bar.style.transform = `translateX(${left}px)`;\r\n    };\r\n\r\n    // update on clicks (wait for bootstrap to toggle .active)\r\n    ul.addEventListener('click', (e) => {\r\n      const link = e.target.closest('.nav-link');\r\n      if (link && ul.contains(link)) {\r\n        setTimeout(update, 150);\r\n      }\r\n    });\r\n\r\n    // update on resize\r\n    window.addEventListener('resize', update);\r\n\r\n    // observe active class changes & DOM changes inside the tabs\r\n    const mo = new MutationObserver(() => update());\r\n    mo.observe(ul, { subtree: true, childList: true, attributes: true, attributeFilter: ['class'] });\r\n\r\n    // initial position\r\n    setTimeout(update, 0);\r\n  }\r\n\r\n  function scanAndInit() {\r\n    document.querySelectorAll('ul.form-tabs, ul.nav-tabs, #form-tabs').forEach(initSlidingTabs);\r\n  }\r\n\r\n  // initial scan\r\n  scanAndInit();\r\n\r\n  // ERPNext desk is SPA-like; watch for new forms/tabs injected later\r\n  const bodyObserver = new MutationObserver(() => scanAndInit());\r\n  bodyObserver.observe(document.body, { childList: true, subtree: true });\r\n\r\n  // also rescan after Bootstrap tab show (BS4/BS5 attribute variants)\r\n  document.addEventListener('click', (e) => {\r\n    if (e.target.closest('a[data-toggle=\"tab\"], a[data-bs-toggle=\"tab\"]')) {\r\n      setTimeout(scanAndInit, 200);\r\n    }\r\n  });\r\n});\r\n\r\n\r\n\r\n//  login password\r\n\r\n// document.addEventListener(\"DOMContentLoaded\", () => {\r\n//     const injectToggle = (input) => {\r\n//         // avoid duplicate injection\r\n//         if (input.parentNode.querySelector(\".toggle-password\")) return;\r\n\r\n//         let toggle = document.createElement(\"div\");\r\n//         toggle.classList.add(\"toggle-password\");\r\n//         toggle.innerHTML = `\r\n//             <svg class=\"icon icon-sm\" aria-hidden=\"true\">\r\n//                 <use href=\"#icon-unhide\"></use>\r\n//             </svg>\r\n//         `;\r\n\r\n//         // style position relative so we can absolutely position the icon\r\n//         input.parentNode.style.position = \"relative\";\r\n//         toggle.style.position = \"absolute\";\r\n//         toggle.style.right = \"10px\";\r\n//         toggle.style.top = \"50%\";\r\n//         toggle.style.transform = \"translateY(-50%)\";\r\n//         toggle.style.cursor = \"pointer\";\r\n\r\n//         input.parentNode.appendChild(toggle);\r\n\r\n//         // toggle logic\r\n//         toggle.addEventListener(\"click\", () => {\r\n//             if (input.type === \"password\") {\r\n//                 input.type = \"text\";\r\n//                 toggle.querySelector(\"use\").setAttribute(\"href\", \"#icon-hide\");\r\n//             } else {\r\n//                 input.type = \"password\";\r\n//                 toggle.querySelector(\"use\").setAttribute(\"href\", \"#icon-unhide\");\r\n//             }\r\n//         });\r\n//     };\r\n\r\n//     // Initial injection\r\n//     document.querySelectorAll('input[type=\"password\"]').forEach(injectToggle);\r\n\r\n//     // Observe for dynamically added inputs\r\n//     const observer = new MutationObserver((mutations) => {\r\n//         mutations.forEach((mutation) => {\r\n//             mutation.addedNodes.forEach((node) => {\r\n//                 if (node.nodeType === 1) {\r\n//                     // direct input\r\n//                     if (node.matches?.('input[type=\"password\"]')) {\r\n//                         injectToggle(node);\r\n//                     }\r\n//                     // nested inputs inside added container\r\n//                     node.querySelectorAll?.('input[type=\"password\"]').forEach(injectToggle);\r\n//                 }\r\n//             });\r\n//         });\r\n//     });\r\n\r\n//     observer.observe(document.body, { childList: true, subtree: true });\r\n// });\r\n\r\n\r\n//     // Initial injection\r\n\r\n//     // Observe for dynamically added inputs\r\n//     const observer = new MutationObserver((mutations) => {\r\n//         mutations.forEach((mutation) => {\r\n//             mutation.addedNodes.forEach((node) => {\r\n//                 if (node.nodeType === 1) {\r\n//                     // direct input\r\n//                     if (node.matches?.('input[type=\"password\"]')) {\r\n//                         injectToggle(node);\r\n//                     }\r\n//                     // nested inputs inside added container\r\n//                     node.querySelectorAll?.('input[type=\"password\"]').forEach(injectToggle);\r\n//                 }\r\n//             });\r\n//         });\r\n//     });\r\n\r\n//     observer.observe(document.body, { childList: true, subtree: true });\r\n\r\n\r\n\r\n    \r\n\r\n// \r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  console.log(\"Awesomplete shift start\");\r\n\r\n  const observer = new MutationObserver(() => {\r\n    // find focused input inside form-grid that has awesomplete\r\n    const activeInput = document.querySelector(\r\n      '.form-grid .awesomplete input:focus[aria-owns]'\r\n    );\r\n\r\n    if (activeInput) {\r\n      const listId = activeInput.getAttribute(\"aria-owns\");\r\n      const list = document.getElementById(listId);\r\n\r\n      if (list) {\r\n        console.log(\"Focused input:\", activeInput.dataset.fieldname, activeInput);\r\n        console.log(\"Dropdown list:\", listId, list);\r\n\r\n        // move list to <body> so it's not clipped by table/grid\r\n        if (!list.dataset.shifted) {\r\n          list.dataset.shifted = \"1\"; \r\n          document.body.appendChild(list);\r\n\r\n          // reset base styles\r\n          list.style.position = \"absolute\";\r\n          list.style.background= \"white\";\r\n          list.style.width=\"350px\"\r\n          list.style.border=\"1.4px solid whitesmoke\"\r\n          list.style.zIndex = \"9999\"; // ensure it's above form\r\n          list.hidden = false;\r\n        }\r\n\r\n        // always recalc position relative to input\r\n        const rect = activeInput.getBoundingClientRect();\r\n        list.style.top = rect.bottom + window.scrollY + \"px\";\r\n        list.style.left = rect.left + window.scrollX + \"px\";\r\n        list.style.width = rect.width + \"px\";\r\n      }\r\n    }\r\n  });\r\n\r\n  observer.observe(document.body, {\r\n    childList: true,\r\n    subtree: true,\r\n  });\r\n});\r\n\r\n\r\n// document.addEventListener(\"DOMContentLoaded\", function () {\r\n//   console.log(\"Awesomplete shift start\");\r\n\r\n//   const observer = new MutationObserver(() => {\r\n//     // only pick lists inside form-grid\r\n//     const list = document.querySelector(\r\n//       '.form-grid .scrollable-xx-xxxx ul[id^=\"awesomplete_list_\"]:not([data-shifted])'\r\n//     );\r\n//     const target = document.querySelector('.form-grid .scrollable-xx-xxxx');\r\n\r\n//     if (list && target) {\r\n//       list.dataset.shifted = \"1\"; // mark so we don't move twice\r\n//       target.appendChild(list);\r\n\r\n//       // reset styles\r\n//       list.style.position = \"absolute\";\r\n//       list.style.top = \"100%\";  // default below input\r\n//       list.style.left = \"0\";\r\n//       list.style.width = \"250px\"; // force width if needed\r\n//       list.hidden = false;\r\n\r\n//       console.log(\"Awesomplete shifted (form-grid only)\");\r\n\r\n//       // Reposition near the active input inside form-grid\r\n//       const activeInput = target.querySelector(\".awesomplete input:focus\");\r\n//       if (activeInput) {\r\n//         const rect = activeInput.getBoundingClientRect();\r\n//         const gridRect = target.getBoundingClientRect();\r\n//         list.style.top = rect.bottom - gridRect.top + \"px\";\r\n//         list.style.left = rect.left - gridRect.left + \"px\";\r\n//         list.style.width = rect.width + \"px\";\r\n//       }\r\n//     }\r\n//   });\r\n\r\n//   observer.observe(document.body, {\r\n//     childList: true,\r\n//     subtree: true,\r\n//   });\r\n// });\r\n\r\n", "\r\n// for only hide\r\n// function waitForBreadcrumbs() {\r\n//     const el = document.getElementById(\"navbar-breadcrumbs\");\r\n//     if (el) {\r\n//         console.log(\"\u2705 Found:\", el);\r\n\r\n//         // \u2705 Add CSS with !important\r\n//         const style = document.createElement('style');\r\n//         style.id = 'hide-navbar-breadcrumbs';\r\n//         style.textContent = `\r\n//             #navbar-breadcrumbs {\r\n//                 display: none !important;\r\n//             }\r\n//         `;\r\n//         document.head.appendChild(style);\r\n\r\n//         el.dataset.hiddenByBaps = '1';\r\n//         console.log(\"\u2705 #navbar-breadcrumbs hidden with !important\");\r\n//     } else {\r\n//         console.log(\"\u23F3 Not found yet... retrying\");\r\n//         setTimeout(waitForBreadcrumbs, 200);\r\n//     }\r\n// }\r\n\r\n// waitForBreadcrumbs();\r\n\r\n\r\n\r\n// function moveBreadcrumbsToSticky() {\r\n//     const sticky = document.querySelector(\".sticky-top\");\r\n//     const breadcrumbs = document.getElementById(\"navbar-breadcrumbs\");\r\n\r\n//     if (sticky && breadcrumbs && !sticky.contains(breadcrumbs)) {\r\n//         sticky.appendChild(breadcrumbs); // \u2705 Move from navbar into sticky\r\n//         console.log(\"\u2705 Breadcrumbs moved into .sticky-top\");\r\n//     }\r\n// }\r\n\r\n// function injectModulesBreadcrumb() {\r\n//     const breadcrumbs = document.getElementById(\"navbar-breadcrumbs\");\r\n//     if (!breadcrumbs) return;\r\n\r\n//     // Already added?\r\n//     const firstLink = breadcrumbs.querySelector(\"a[href='/app/modules']\");\r\n//     if (firstLink) return;\r\n\r\n//     // Create Modules link\r\n//     const modulesLink = document.createElement(\"a\");\r\n//     modulesLink.href = \"/app/modules\";\r\n//     modulesLink.textContent = \"Modules\";\r\n//     modulesLink.classList.add(\"navbar-breadcrumb-link\");\r\n//     modulesLink.style.cursor = \"pointer\";\r\n//     modulesLink.style.fontWeight = \"600\";\r\n//     modulesLink.style.textDecoration = \"none\";\r\n\r\n//     // Insert at the beginning\r\n//     const li = document.createElement(\"li\");\r\n//     li.appendChild(modulesLink);\r\n\r\n//     breadcrumbs.insertBefore(li, breadcrumbs.firstChild || null);\r\n\r\n//     console.log(\"\u2705 'Modules' breadcrumb injected\");\r\n// }\r\n\r\n// function watchBreadcrumbs() {\r\n//     const breadcrumbs = document.getElementById(\"navbar-breadcrumbs\");\r\n//     if (!breadcrumbs) return;\r\n\r\n//     // Ensure it's placed in sticky\r\n//     moveBreadcrumbsToSticky();\r\n\r\n//     // Observe DOM mutations inside breadcrumbs\r\n//     const observer = new MutationObserver(() => {\r\n//         moveBreadcrumbsToSticky(); // in case Frappe re-inserts it back in navbar\r\n//         injectModulesBreadcrumb();\r\n//     });\r\n\r\n//     observer.observe(breadcrumbs, { childList: true, subtree: true });\r\n\r\n//     // Run once\r\n//     injectModulesBreadcrumb();\r\n// }\r\n\r\n// // Run after DOM loads\r\n// document.addEventListener(\"DOMContentLoaded\", () => {\r\n//     let attempts = 0;\r\n//     const timer = setInterval(() => {\r\n//         const bc = document.getElementById(\"navbar-breadcrumbs\");\r\n//         if (bc || attempts > 20) {\r\n//             clearInterval(timer);\r\n//             if (bc) watchBreadcrumbs();\r\n//         }\r\n//         attempts++;\r\n//     }, 200);\r\n// });\r\n\r\nfunction relocateBreadcrumbs() {\r\n    const sticky = document.querySelector(\".sticky-top\");\r\n    const header = sticky?.querySelector(\"header.navbar\");\r\n    const breadcrumbs = document.getElementById(\"navbar-breadcrumbs\");\r\n\r\n    if (sticky && header && breadcrumbs) {\r\n        // If breadcrumbs are still inside header \u2192 move them after header\r\n        if (header.contains(breadcrumbs)) {\r\n            header.after(breadcrumbs);\r\n            console.log(\"\u2705 Breadcrumbs moved outside <header> into sticky-top\");\r\n        }\r\n\r\n        // Always ensure \"Modules\" is the first <li>\r\n        const firstLi = breadcrumbs.querySelector(\"li:first-child a\");\r\n        if (!firstLi || firstLi.getAttribute(\"href\") !== \"/app/modules\") {\r\n            const modulesLink = document.createElement(\"a\");\r\n            modulesLink.href = \"/app/modules\";\r\n            modulesLink.textContent = \"Modules\";\r\n            modulesLink.classList.add(\"navbar-breadcrumb-link\");\r\n            modulesLink.style.cursor = \"pointer\";\r\n            modulesLink.style.fontWeight = \"600\";\r\n            modulesLink.style.textDecoration = \"none\";\r\n\r\n            const li = document.createElement(\"li\");\r\n            li.appendChild(modulesLink);\r\n\r\n            breadcrumbs.insertBefore(li, breadcrumbs.firstChild || null);\r\n            console.log(\"\u2705 'Modules' breadcrumb injected once\");\r\n        }\r\n    }\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    let attempts = 0;\r\n    const timer = setInterval(() => {\r\n        const bc = document.getElementById(\"navbar-breadcrumbs\");\r\n        if (bc || attempts > 20) {\r\n            clearInterval(timer);\r\n            relocateBreadcrumbs();\r\n\r\n            // Watch for re-renders\r\n            const observer = new MutationObserver(relocateBreadcrumbs);\r\n            observer.observe(document.body, { childList: true, subtree: true });\r\n        }\r\n        attempts++;\r\n    }, 200);\r\n});\r\n\r\n\r\n// $(document).on('app_ready hash_change', function () {\r\n//     // Wait a bit for DOM to settle\r\n//     setTimeout(() => {\r\n//         // \u2705 Safe check: does frappe.get_route exist and return a valid route?\r\n//         const route = frappe.get_route ? frappe.get_route() : null;\r\n//         const currentRoute = Array.isArray(route) && route.length > 0 ? route[0] : null;\r\n//         const body = document.body;\r\n\r\n//         if (currentRoute === 'modules') {\r\n//             body.classList.add('route-modules');\r\n//             console.log(\"\u2705 Added: route-modules \u2192 breadcrumb hidden\");\r\n//         } else {\r\n//             body.classList.remove('route-modules');\r\n//             console.log(\"\u2705 Removed: route-modules \u2192 breadcrumb visible\");\r\n//         }\r\n//     }, 100);\r\n// });\r\n\r\n// Watch body class and hide/show breadcrumb based on 'no-breadcrumbs'\r\n// Run once when app is ready\r\n\r\n    $(document).on('app_ready hash_change', function () {\r\n        let observer = null;\r\n\r\n        function cleanupObserver() {\r\n            if (observer) {\r\n                observer.disconnect();\r\n                observer = null;\r\n            }\r\n        }\r\n\r\n        function applyHide() {\r\n            const route = frappe.get_route ? frappe.get_route() : null;\r\n            const isModulesPage = Array.isArray(route) && route.length > 0 && route[0] === 'modules';\r\n            const bc = document.getElementById('navbar-breadcrumbs');\r\n\r\n            if (!bc) {\r\n                console.log(\"\u23F3 #navbar-breadcrumbs not found\");\r\n                return false;\r\n            }\r\n\r\n            if (isModulesPage) {\r\n                bc.classList.add('hide-breadcrumb-force');\r\n                console.log(\"\u2705 HIDING: .hide-breadcrumb-force added\");\r\n            } else {\r\n                bc.classList.remove('hide-breadcrumb-force');\r\n                console.log(\"\u2705 SHOWING: .hide-breadcrumb-force removed\");\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        // Re-apply if Frappe removes the class\r\n        function startObserver() {\r\n            cleanupObserver();\r\n\r\n            const bc = document.getElementById('navbar-breadcrumbs');\r\n            if (!bc) return;\r\n\r\n            observer = new MutationObserver(() => {\r\n                const route = frappe.get_route ? frappe.get_route() : null;\r\n                const isModulesPage = Array.isArray(route) && route.length > 0 && route[0] === 'modules';\r\n                const bc = document.getElementById('navbar-breadcrumbs');\r\n\r\n                if (!bc) return;\r\n\r\n                if (isModulesPage && !bc.classList.contains('hide-breadcrumb-force')) {\r\n                    bc.classList.add('hide-breadcrumb-force');\r\n                    console.log(\"\uD83D\uDD01 Re-applied .hide-breadcrumb-force (was removed by Frappe)\");\r\n                } else if (!isModulesPage && bc.classList.contains('hide-breadcrumb-force')) {\r\n                    bc.classList.remove('hide-breadcrumb-force');\r\n                }\r\n            });\r\n\r\n            observer.observe(bc, {\r\n                attributes: true,\r\n                attributeFilter: ['class', 'style']\r\n            });\r\n        }\r\n\r\n        // Initial run\r\n        if (applyHide()) {\r\n            startObserver();\r\n        }\r\n\r\n        // Re-run on every hash change\r\n        $(document).off('hash_change.breadcrumb').on('hash_change.breadcrumb', function () {\r\n            console.log(\"\uD83D\uDD04 Route changed, re-applying...\");\r\n            setTimeout(() => {\r\n                if (applyHide()) {\r\n                    startObserver();\r\n                }\r\n            }, 100);\r\n        });\r\n    });"],
  "mappings": "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",
  "names": ["bc"]
}
