{
  "version": 3,
  "sources": ["../../../../../apps/baps/baps/public/js/theme_switcher.js", "../../../../../apps/baps/baps/public/js/login.bundle.js", "../../../../../apps/baps/baps/public/js/customJs.bundle.js", "../../../../../apps/baps/baps/public/js/breadcrubOverride.js", "../../../../../apps/baps/baps/public/js/awsomeDropDownTable.js", "../../../../../apps/baps/baps/public/js/grid_overrides.js"],
  "sourcesContent": ["frappe.provide(\"frappe.ui\");\n\nfrappe.ui.ThemeSwitcher = class CustomThemeSwitcher extends frappe.ui.ThemeSwitcher {\n\n    fetch_themes() {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.themes = [\n\t\t\t\t{\n\t\t\t\t\tname: \"light\",\n\t\t\t\t\tlabel:(\"Frappe Light\"),\n\t\t\t\t\tinfo:(\"Light Theme\"),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"dark\",\n\t\t\t\t\tlabel:\"Timeless Night\",\n\t\t\t\t\tinfo:\"Dark Theme\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"automatic\",\n\t\t\t\t\tlabel:\"Automatic\",\n\t\t\t\t\tinfo:\"Uses system's theme to switch between light and dark mode\",\n\t\t\t\t},\n                {\n                    name:\"baps\",\n                    label: \"baps\",\n                    info: \"baps Theme\"\n                }\n              \n\t\t\t];\n\n\t\t\tresolve(this.themes);\n\t\t});\n\t}\n}", "// =============================\n// Custom Password Toggle (No jQuery)\n// =============================\n\n// SVG Icons\nconst eyeSVG = `\n<svg class=\"icon-eye\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M15.0007 12C15.0007 13.6569 13.6576 15 12.0007 15C10.3439 15 9.00073 13.6569 9.00073 12C9.00073 10.3431 10.3439 9 12.0007 9C13.6576 9 15.0007 10.3431 15.0007 12Z\" stroke=\"gray\" stroke-width=\"1.4\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n  <path d=\"M12.0012 5C7.52354 5 3.73326 7.94288 2.45898 12C3.73324 16.0571 7.52354 19 12.0012 19C16.4788 19 20.2691 16.0571 21.5434 12C20.2691 7.94291 16.4788 5 12.0012 5Z\" stroke=\"gray\" stroke-width=\"1.4\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n</svg>\n`;\n\nconst eyeSlashSVG = `\n<svg class=\"icon-eye-slash\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M2.99902 3L20.999 21M9.8433 9.91364C9.32066 10.4536 8.99902 11.1892 8.99902 12C8.99902 13.6569 10.3422 15 11.999 15C12.8215 15 13.5667 14.669 14.1086 14.133M6.49902 6.64715C4.59972 7.90034 3.15305 9.78394 2.45703 12C3.73128 16.0571 7.52159 19 11.9992 19C13.9881 19 15.8414 18.4194 17.3988 17.4184M10.999 5.04939C11.328 5.01673 11.6617 5 11.9992 5C16.4769 5 20.2672 7.94291 21.5414 12C21.2607 12.894 20.8577 13.7338 20.3522 14.5\" stroke=\"gray\" stroke-width=\"1.4\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n</svg>\n`;\n\n// Add a custom toggle button next to password inputs\nfunction addCustomPasswordToggle(input) {\n  console.log(\"in login file : in custom toggle funton\");\n  // Skip if already added\n  if (input.parentNode.querySelector(\".custom-toggle-password\")) return;\n\n  const wrapper = input.parentNode;\n  const button = document.createElement(\"span\");\n  button.classList.add(\"custom-toggle-password\");\n  button.style.cursor = \"pointer\";\n  button.style.marginLeft = \"8px\";\n  button.innerHTML = eyeSlashSVG;\n\n  wrapper.appendChild(button);\n\n  console.log(\"in login file : apped\");\n\n\n  button.addEventListener(\"click\", () => {\n    if (input.type === \"password\") {\n      input.type = \"text\";\n      button.innerHTML = eyeSVG;\n    } else {\n      input.type = \"password\";\n      button.innerHTML = eyeSlashSVG;\n    }\n  });\n}\n\n// =============================\n// Boot Script\n// =============================\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // Hide the original Frappe toggle\n  const style = document.createElement(\"style\");\n  style.innerHTML = `\n    .toggle-password { display: none !important; }\n    .custom-toggle-password svg {\n      vertical-align: middle;\n    }\n  `;\n  document.head.appendChild(style);\n\n  // Add to existing password inputs\n  document.querySelectorAll('input[type=\"password\"]').forEach(addCustomPasswordToggle);\n\n  // Add observer for dynamically added password fields\n  const observer = new MutationObserver(mutations => {\n    mutations.forEach(mutation => {\n      mutation.addedNodes.forEach(node => {\n        if (node.nodeType === 1) {\n          if (node.matches('input[type=\"password\"]')) {\n            addCustomPasswordToggle(node);\n          } else {\n            const inputs = node.querySelectorAll?.('input[type=\"password\"]') || [];\n            inputs.forEach(addCustomPasswordToggle);\n          }\n        }\n      });\n    });\n  });\n\n  observer.observe(document.body, { childList: true, subtree: true });\n});\n\n\n", "// // function removePageTItles(){\n// //   const  pageTitle = document.querySelector(\".page-title\");\n// //     // Start observing changes in the body subtree\n// //   observer.observe(document.body, {\n// //     childList: true,\n// //     subtree: true,\n// //   });\n\n// // }\n// // document.addEventListener(\"DOMContentLoaded\", movePageHeadContent);\n\n// // sliding active bar for ERPNext form tabs (no frappe.ready)\n\n\n\n// // from-tab sliding effect\n\n// document.addEventListener('DOMContentLoaded', function () {\n//   function initSlidingTabs(ul) {\n//     if (!ul || ul.dataset.slidingTabsInitialized) return;\n//     ul.dataset.slidingTabsInitialized = '1';\n//     ul.style.position = ul.style.position || 'relative';\n\n//     // create the highlight bar\n//     const bar = document.createElement('div');\n//     bar.className = 'sliding-tab-bar';\n//     Object.assign(bar.style, {\n//       position: 'absolute',\n//       bottom: '0',\n//       height: '4px',\n//       background: 'var(--_primary-bg-color)',\n//       borderRadius: '1em 1em 0em 0em',\n//       transition: 'transform 200ms ease, width 200ms ease',\n//       left: '0',\n//       width: '0',\n//       zIndex: '1',\n//       pointerEvents: 'none'\n//     });\n//     ul.appendChild(bar);\n\n//     const update = () => {\n//       const active =\n//         ul.querySelector('.nav-link.active') ||\n//         ul.querySelector('.nav-link');\n//       if (!active) return;\n//       const linkRect = active.getBoundingClientRect();\n//       const ulRect = ul.getBoundingClientRect();\n//       const left = linkRect.left - ulRect.left + ul.scrollLeft;\n//       bar.style.width = linkRect.width + 'px';\n//       bar.style.transform = `translateX(${left}px)`;\n//     };\n\n//     // update on clicks (wait for bootstrap to toggle .active)\n//     ul.addEventListener('click', (e) => {\n//       const link = e.target.closest('.nav-link');\n//       if (link && ul.contains(link)) {\n//         setTimeout(update, 150);\n//       }\n//     });\n\n//     // update on resize\n//     window.addEventListener('resize', update);\n\n//     // observe active class changes & DOM changes inside the tabs\n//     const mo = new MutationObserver(() => update());\n//     mo.observe(ul, { subtree: true, childList: true, attributes: true, attributeFilter: ['class'] });\n\n//     // initial position\n//     setTimeout(update, 0);\n//   }\n\n//   function scanAndInit() {\n//     document.querySelectorAll('ul.form-tabs, ul.nav-tabs, #form-tabs').forEach(initSlidingTabs);\n//   }\n\n//   // initial scan\n//   scanAndInit();\n\n//   // ERPNext desk is SPA-like; watch for new forms/tabs injected later\n//   const bodyObserver = new MutationObserver(() => scanAndInit());\n//   bodyObserver.observe(document.body, { childList: true, subtree: true });\n\n//   // also rescan after Bootstrap tab show (BS4/BS5 attribute variants)\n//   document.addEventListener('click', (e) => {\n//     if (e.target.closest('a[data-toggle=\"tab\"], a[data-bs-toggle=\"tab\"]')) {\n//       setTimeout(scanAndInit, 200);\n//     }\n//   });\n// });\n\n\n\n\n\n\n\n// // from-tab sliding effect\n\n// document.addEventListener('DOMContentLoaded', function () {\n//   function initSlidingTabs(ul) {\n//     if (!ul || ul.dataset.slidingTabsInitialized) return;\n//     ul.dataset.slidingTabsInitialized = '1';\n//     ul.style.position = ul.style.position || 'relative';\n\n//     // create the highlight bar\n//     const bar = document.createElement('div');\n//     bar.className = 'sliding-tab-bar';\n//     Object.assign(bar.style, {\n//       position: 'absolute',\n//       bottom: '0',\n//       height: '4px',\n//       background: 'var(--_primary-bg-color)',\n//       borderRadius: '1em 1em 0em 0em',\n//       transition: 'transform 200ms ease, width 200ms ease',\n//       left: '0',\n//       width: '0',\n//       zIndex: '1',\n//       pointerEvents: 'none'\n//     });\n//     ul.appendChild(bar);\n\n//     const update = () => {\n//       const active =\n//         ul.querySelector('.nav-link.active') ||\n//         ul.querySelector('.nav-link');\n//       if (!active) return;\n//       const linkRect = active.getBoundingClientRect();\n//       const ulRect = ul.getBoundingClientRect();\n//       const left = linkRect.left - ulRect.left + ul.scrollLeft;\n//       bar.style.width = linkRect.width + 'px';\n//       bar.style.transform = `translateX(${left}px)`;\n//     };\n\n//     // update on clicks (wait for bootstrap to toggle .active)\n//     ul.addEventListener('click', (e) => {\n//       const link = e.target.closest('.nav-link');\n//       if (link && ul.contains(link)) {\n//         setTimeout(update, 150);\n//       }\n//     });\n\n//     // update on resize\n//     window.addEventListener('resize', update);\n\n//     // observe active class changes & DOM changes inside the tabs\n//     const mo = new MutationObserver(() => update());\n//     mo.observe(ul, { subtree: true, childList: true, attributes: true, attributeFilter: ['class'] });\n\n//     // initial position\n//     setTimeout(update, 0);\n//   }\n\n//   function scanAndInit() {\n//     document.querySelectorAll('ul.form-tabs, ul.nav-tabs, #form-tabs').forEach(initSlidingTabs);\n//   }\n\n//   // initial scan\n//   scanAndInit();\n\n//   // ERPNext desk is SPA-like; watch for new forms/tabs injected later\n//   const bodyObserver = new MutationObserver(() => scanAndInit());\n//   bodyObserver.observe(document.body, { childList: true, subtree: true });\n\n//   // also rescan after Bootstrap tab show (BS4/BS5 attribute variants)\n//   document.addEventListener('click', (e) => {\n//     if (e.target.closest('a[data-toggle=\"tab\"], a[data-bs-toggle=\"tab\"]')) {\n//       setTimeout(scanAndInit, 200);\n//     }\n//   });\n// });\n\n\n// // \n\n// // sidebar false\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//   const sidebar = document.querySelector(\".sidebar\"); // your sidebar element\n//   const toggleBtn = document.querySelector(\".sidebar-toggle-btn\");\n//   const toggleIcon = toggleBtn.querySelector(\".sidebar-toggle-icon use\");\n\n//   // \u2705 Collapse by default\n//   sidebar.classList.add(\"collapsed\");\n//   toggleIcon.setAttribute(\"href\", \"#es-line-sidebar-expand\");\n\n//   // \u2705 Toggle on click\n//   toggleBtn.addEventListener(\"click\", function () {\n//     if (sidebar.classList.contains(\"collapsed\")) {\n//       // Expand\n//       sidebar.classList.remove(\"collapsed\");\n//       toggleIcon.setAttribute(\"href\", \"#es-line-sidebar-collapse\");\n//       console.log(\"collapsed sidebar\")\n//     } else {\n//       // Collapse\n//       sidebar.classList.add(\"collapsed\");\n//       toggleIcon.setAttribute(\"href\", \"#es-line-sidebar-expand\");\n//       console.log(\"expand  sidebar\")\n\n//     }\n//   });\n// });\n\n\n\n// function removePageTItles(){\n//   const  pageTitle = document.querySelector(\".page-title\");\n//     // Start observing changes in the body subtree\n//   observer.observe(document.body, {\n//     childList: true,\n//     subtree: true,\n//   });\n\n// }\n// document.addEventListener(\"DOMContentLoaded\", movePageHeadContent);\n\n// sliding active bar for ERPNext form tabs (no frappe.ready)\n\n\n\n// from-tab sliding effect\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  function initSlidingTabs(ul) {\n    if (!ul || ul.dataset.slidingTabsInitialized) return;\n    ul.dataset.slidingTabsInitialized = '1';\n    ul.style.position = ul.style.position || 'relative';\n\n    // create the highlight bar\n    const bar = document.createElement('div');\n    bar.className = 'sliding-tab-bar';\n    Object.assign(bar.style, {\n      position: 'absolute',\n      bottom: '0',\n      height: '4px',\n      background: 'orange',\n      borderRadius: '1em 1em 0em 0em',\n      transition: 'transform 200ms ease, width 200ms ease',\n      left: '0',\n      width: '0',\n      zIndex: '1',\n      pointerEvents: 'none'\n    });\n    ul.appendChild(bar);\n    console.log(\"tab active slideer insterd\")\n\n    const update = () => {\n      const active =\n        ul.querySelector('.nav-link.active') ||\n        ul.querySelector('.nav-link');\n      if (!active) return;\n      const linkRect = active.getBoundingClientRect();\n      const ulRect = ul.getBoundingClientRect();\n      const left = linkRect.left - ulRect.left + ul.scrollLeft;\n      bar.style.width = linkRect.width + 'px';\n      bar.style.transform = `translateX(${left}px)`;\n    };\n\n    // update on clicks (wait for bootstrap to toggle .active)\n    ul.addEventListener('click', (e) => {\n      const link = e.target.closest('.nav-link');\n      if (link && ul.contains(link)) {\n        setTimeout(update, 150);\n      }\n    });\n\n    // update on resize\n    window.addEventListener('resize', update);\n\n    // observe active class changes & DOM changes inside the tabs\n    const mo = new MutationObserver(() => update());\n    mo.observe(ul, { subtree: true, childList: true, attributes: true, attributeFilter: ['class'] });\n\n    // initial position\n    setTimeout(update, 0);\n  }\n\n  function scanAndInit() {\n    document.querySelectorAll('ul.form-tabs, ul.nav-tabs, #form-tabs').forEach(initSlidingTabs);\n  }\n\n  // initial scan\n  scanAndInit();\n\n  // ERPNext desk is SPA-like; watch for new forms/tabs injected later\n  const bodyObserver = new MutationObserver(() => scanAndInit());\n  bodyObserver.observe(document.body, { childList: true, subtree: true });\n\n  // also rescan after Bootstrap tab show (BS4/BS5 attribute variants)\n  document.addEventListener('click', (e) => {\n    if (e.target.closest('a[data-toggle=\"tab\"], a[data-bs-toggle=\"tab\"]')) {\n      setTimeout(scanAndInit, 200);\n    }\n  });\n});\n\n\n\n//  login password\n\n// document.addEventListener(\"DOMContentLoaded\", () => {\n//     const injectToggle = (input) => {\n//         // avoid duplicate injection\n//         if (input.parentNode.querySelector(\".toggle-password\")) return;\n\n//         let toggle = document.createElement(\"div\");\n//         toggle.classList.add(\"toggle-password\");\n//         toggle.innerHTML = `\n//             <svg class=\"icon icon-sm\" aria-hidden=\"true\">\n//                 <use href=\"#icon-unhide\"></use>\n//             </svg>\n//         `;\n\n//         // style position relative so we can absolutely position the icon\n//         input.parentNode.style.position = \"relative\";\n//         toggle.style.position = \"absolute\";\n//         toggle.style.right = \"10px\";\n//         toggle.style.top = \"50%\";\n//         toggle.style.transform = \"translateY(-50%)\";\n//         toggle.style.cursor = \"pointer\";\n\n//         input.parentNode.appendChild(toggle);\n\n//         // toggle logic\n//         toggle.addEventListener(\"click\", () => {\n//             if (input.type === \"password\") {\n//                 input.type = \"text\";\n//                 toggle.querySelector(\"use\").setAttribute(\"href\", \"#icon-hide\");\n//             } else {\n//                 input.type = \"password\";\n//                 toggle.querySelector(\"use\").setAttribute(\"href\", \"#icon-unhide\");\n//             }\n//         });\n//     };\n\n//     // Initial injection\n//     document.querySelectorAll('input[type=\"password\"]').forEach(injectToggle);\n\n//     // Observe for dynamically added inputs\n//     const observer = new MutationObserver((mutations) => {\n//         mutations.forEach((mutation) => {\n//             mutation.addedNodes.forEach((node) => {\n//                 if (node.nodeType === 1) {\n//                     // direct input\n//                     if (node.matches?.('input[type=\"password\"]')) {\n//                         injectToggle(node);\n//                     }\n//                     // nested inputs inside added container\n//                     node.querySelectorAll?.('input[type=\"password\"]').forEach(injectToggle);\n//                 }\n//             });\n//         });\n//     });\n\n//     observer.observe(document.body, { childList: true, subtree: true });\n// });\n\n\n//     // Initial injection\n\n//     // Observe for dynamically added inputs\n//     const observer = new MutationObserver((mutations) => {\n//         mutations.forEach((mutation) => {\n//             mutation.addedNodes.forEach((node) => {\n//                 if (node.nodeType === 1) {\n//                     // direct input\n//                     if (node.matches?.('input[type=\"password\"]')) {\n//                         injectToggle(node);\n//                     }\n//                     // nested inputs inside added container\n//                     node.querySelectorAll?.('input[type=\"password\"]').forEach(injectToggle);\n//                 }\n//             });\n//         });\n//     });\n\n//     observer.observe(document.body, { childList: true, subtree: true });\n\n\n\n    \n\n// \ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  console.log(\"Awesomplete shift start\");\n\n  const observer = new MutationObserver(() => {\n    // find focused input inside form-grid that has awesomplete\n    const activeInput = document.querySelector(\n      '.form-grid .awesomplete input:focus[aria-owns]'\n    );\n\n    if (activeInput) {\n      const listId = activeInput.getAttribute(\"aria-owns\");\n      const list = document.getElementById(listId);\n\n      if (list) {\n        console.log(\"Focused input:\", activeInput.dataset.fieldname, activeInput);\n        console.log(\"Dropdown list:\", listId, list);\n\n        // move list to <body> so it's not clipped by table/grid\n        if (!list.dataset.shifted) {\n          list.dataset.shifted = \"1\"; \n          document.body.appendChild(list);\n\n          // reset base styles\n          list.style.position = \"absolute\";\n          list.style.background= \"white\";\n          list.style.width=\"350px\"\n          list.style.border=\"1.4px solid whitesmoke\"\n          list.style.zIndex = \"9999\"; // ensure it's above form\n          list.hidden = false;\n        }\n\n        // always recalc position relative to input\n        const rect = activeInput.getBoundingClientRect();\n        list.style.top = rect.bottom + window.scrollY + \"px\";\n        list.style.left = rect.left + window.scrollX + \"px\";\n        list.style.width = rect.width + \"px\";\n      }\n    }\n  });\n\n  observer.observe(document.body, {\n    childList: true,\n    subtree: true,\n  });\n});\n\n\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//   console.log(\"Awesomplete shift start\");\n\n//   const observer = new MutationObserver(() => {\n//     // only pick lists inside form-grid\n//     const list = document.querySelector(\n//       '.form-grid .scrollable-xx-xxxx ul[id^=\"awesomplete_list_\"]:not([data-shifted])'\n//     );\n//     const target = document.querySelector('.form-grid .scrollable-xx-xxxx');\n\n//     if (list && target) {\n//       list.dataset.shifted = \"1\"; // mark so we don't move twice\n//       target.appendChild(list);\n\n//       // reset styles\n//       list.style.position = \"absolute\";\n//       list.style.top = \"100%\";  // default below input\n//       list.style.left = \"0\";\n//       list.style.width = \"250px\"; // force width if needed\n//       list.hidden = false;\n\n//       console.log(\"Awesomplete shifted (form-grid only)\");\n\n//       // Reposition near the active input inside form-grid\n//       const activeInput = target.querySelector(\".awesomplete input:focus\");\n//       if (activeInput) {\n//         const rect = activeInput.getBoundingClientRect();\n//         const gridRect = target.getBoundingClientRect();\n//         list.style.top = rect.bottom - gridRect.top + \"px\";\n//         list.style.left = rect.left - gridRect.left + \"px\";\n//         list.style.width = rect.width + \"px\";\n//       }\n//     }\n//   });\n\n//   observer.observe(document.body, {\n//     childList: true,\n//     subtree: true,\n//   });\n// });\n\n", "//              ============== navbar breadcrub ==============\n\n// =======================================================================\n//  relocate breadcrub\n// =======================================================================\nfunction relocateBreadcrumbs() {\n    const sticky = document.querySelector(\".sticky-top\");\n    const header = sticky?.querySelector(\"header.navbar\");\n    const breadcrumbs = document.getElementById(\"navbar-breadcrumbs\");\n\n    if (sticky && header && breadcrumbs) {\n        // If breadcrumbs are still inside header \u2192 move them after header\n        if (header.contains(breadcrumbs)) {\n            header.after(breadcrumbs);\n            console.log(\"\u2705 Breadcrumbs moved outside <header> into sticky-top\");\n        }\n\n        // Always ensure \"Modules\" is the first <li>\n        const firstLi = breadcrumbs.querySelector(\"li:first-child a\");\n        if (!firstLi || firstLi.getAttribute(\"href\") !== \"/app/modules\") {\n            const modulesLink = document.createElement(\"a\");\n            modulesLink.href = \"/app/modules\";\n            modulesLink.textContent = \"Modules\";\n            modulesLink.classList.add(\"navbar-breadcrumb-link\");\n            modulesLink.style.cursor = \"pointer\";\n            modulesLink.style.fontWeight = \"600\";\n            modulesLink.style.textDecoration = \"none\";\n\n            const li = document.createElement(\"li\");\n            li.appendChild(modulesLink);\n\n            breadcrumbs.insertBefore(li, breadcrumbs.firstChild || null);\n            console.log(\"\u2705 'Modules' breadcrumb injected once\");\n        }\n    }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    let attempts = 0;\n    const timer = setInterval(() => {\n        const bc = document.getElementById(\"navbar-breadcrumbs\");\n        if (bc || attempts > 20) {\n            clearInterval(timer);\n            relocateBreadcrumbs();\n\n            // Watch for re-renders\n            const observer = new MutationObserver(relocateBreadcrumbs);\n            observer.observe(document.body, { childList: true, subtree: true });\n        }\n        attempts++;\n    }, 200);\n\n\n\n\n\n});\n\n\n\n// =======================================================================\n//  hide breadcrub on app/modules page\n// =======================================================================\n\n(function () {\n    function applyHide() {\n        const route = frappe.get_route ? frappe.get_route() : null;\n        const isModulesPage = Array.isArray(route) && route[0] === 'modules';\n        const bc = document.getElementById('navbar-breadcrumbs');\n\n        console.log(\"we are in hide navbreadcrub\");\n\n        if (!bc) {\n            console.log(\"\u23F3 #navbar-breadcrumbs not found\");\n            return;\n        }\n\n        if (isModulesPage) {\n            bc.classList.add('hide-breadcrumb-force');\n            console.log(\"\u2705 HIDING breadcrumbs on /modules\");\n        } else {\n            bc.classList.remove('hide-breadcrumb-force');\n            console.log(\"\u2705 SHOWING breadcrumbs on other routes\");\n        }\n    }\n\n    // Wait until frappe is defined\n    function initWhenReady() {\n        if (typeof frappe !== \"undefined\" && frappe.get_route && frappe.router) {\n            console.log(\"\uD83D\uDE80 frappe is ready, initializing applyHide...\");\n            applyHide();\n\n            // React to route changes\n            frappe.router.on('change', () => {\n                console.log(\"\uD83D\uDD04 Route changed, re-applying hide/show...\");\n                setTimeout(applyHide, 100);\n            });\n        } else {\n            // Retry after a bit if frappe not ready yet\n            setTimeout(initWhenReady, 100);\n        }\n    }\n\n    // Start waiting for frappe\n    document.addEventListener(\"DOMContentLoaded\", initWhenReady);\n})();\n\n\n\n", "\n// // Patch Awesomplete positioning inside scrollable grids\n// $(document).on('awesomplete-open', function () {\n//   const input = document.activeElement;\n//   if (!input || !input.className.includes('awesomplete')) return;\n\n//   const dropdown = document.querySelector('.awesomplete ul');\n//   if (!dropdown) return;\n\n//   // Recalculate position relative to input\n//   const rect = input.getBoundingClientRect();\n//   const gridBody = input.closest('.grid-body') || input.closest('.form-grid-container');\n\n//   // If inside a scrollable container, adjust for its scroll\n//   const scrollTop = gridBody ? gridBody.scrollTop : window.pageYOffset;\n\n//   Object.assign(dropdown.style, {\n//     position: 'absolute',\n//     top: `${rect.bottom + scrollTop}px`,\n//     left: `${rect.left + window.scrollX}px`,\n//     width: `${rect.width}px`,\n//     zIndex: '9999',\n//     maxHeight: '300px',\n//     overflowY: 'auto',\n//     border:'1px solid   ',\n//     boxSizing: 'border-box',\n//     borderRadius: \"10px\"\n//   });\n\n//   // Append to body to escape overflow clipping\n//   if (dropdown.parentNode !== document.body) {\n//     document.body.appendChild(dropdown);\n//   }\n// });\n\n\n// Patch Awesomplete positioning inside scrollable grids\n$(document).on('awesomplete-open', function () {\n  const input = document.activeElement;\n  if (!input || !input.className.includes('awesomplete')) return;\n\n  const dropdown = document.querySelector('.awesomplete ul');\n  if (!dropdown) return;\n\n  // Recalculate position relative to input\n  const rect = input.getBoundingClientRect();\n  const gridBody = input.closest('.grid-body') || input.closest('.form-grid-container');\n\n  // If inside a scrollable container, adjust for its scroll\n  const scrollTop = gridBody ? gridBody.scrollTop : window.pageYOffset;\n\n  Object.assign(dropdown.style, {\n    position: 'absolute',\n    top: `${rect.bottom + scrollTop}px`,\n    left: `${rect.left + window.scrollX}px`,\n    width: `${rect.width}px`,\n    zIndex: '9999',\n    maxHeight: '280px',\n    overflowY: 'auto',\n    background: '#fff',\n    border: '1px solid var(--border-color, #e5e7eb)',\n    borderRadius: '0.5rem', // 8px like ERPNext cards\n    boxShadow: '0 4px 12px rgba(0,0,0,0.08)', // ERPNext-like subtle shadow\n    boxSizing: 'border-box',\n    padding: '4px 0'\n  });\n\n  // Append to body to escape overflow clipping\n  if (dropdown.parentNode !== document.body) {\n    document.body.appendChild(dropdown);\n  }\n\n  // Add ERPNext-like list item styling\n  dropdown.querySelectorAll('p').forEach(li => {\n    Object.assign(li.style, {\n      padding: '6px 10px',\n      fontSize: '13px',\n      cursor: 'pointer',\n      borderRadius: '4px',\n      transition: 'background 0.2s ease'\n    });\n\n    li.addEventListener('mouseenter', () => {\n      li.style.background = 'var(--gray-100, #f3f4f6)';\n    });\n    li.addEventListener('mouseleave', () => {\n      li.style.background = 'transparent';\n    });\n  });\n});\n", "// grid_overrides.js\n\nfrappe.provide(\"frappe.ui.form\");\n\n// Override validate_columns_width\nfrappe.ui.form.GridRow.prototype.validate_columns_width = function () {\n    let total_column_width = 0.0;\n\n    this.selected_columns_for_grid.forEach((row) => {\n        if (row.columns && row.columns > 0) {\n            total_column_width += cint(row.columns);\n        }\n    });\n\n    // \uD83D\uDD34 Change error popup logic here\n    if (total_column_width && total_column_width > 40) {\n        frappe.throw(__(\"The total column width cannot be more than 40.\"));\n    }\n};\n\n// Override make_column\nfrappe.ui.form.GridRow.prototype.make_column = function (df, colsize, txt, ci) {\n    let me = this;\n    let add_class =\n        [\"Text\", \"Small Text\"].indexOf(df.fieldtype) !== -1\n            ? \" grid-overflow-no-ellipsis\"\n            : \"\";\n    add_class +=\n        [\"Int\", \"Currency\", \"Float\", \"Percent\"].indexOf(df.fieldtype) !== -1\n            ? \" text-right\"\n            : \"\";\n    add_class += [\"Check\"].indexOf(df.fieldtype) !== -1 ? \" text-center\" : \"\";\n\n    // Example: fixed 3-width col\n    const width = 3;\n    const colClass = `col-xs-${width}`;\n\n    const $col = $(`\n        <div class=\"col grid-static-col ${colClass} ${add_class}\"\n            data-fieldname=\"${df.fieldname}\"\n            data-fieldtype=\"${df.fieldtype}\"\n            style=\"flex: 0 0 ${width}%; \">\n        </div>\n    `)\n        .data(\"df\", df)\n        .appendTo(this.row);\n\n    $col.field_area = $('<div class=\"field-area\"></div>').appendTo($col).toggle(false);\n    $col.static_area = $('<div class=\"static-area ellipsis\"></div>').appendTo($col).html(txt);\n\n    if (!this.doc) {\n        $col.attr(\"title\", __(df.label, null, df.parent));\n    }\n    df.fieldname && $col.static_area.toggleClass(\"reqd\", Boolean(df.reqd));\n\n    $col.on(\"click\", function () {\n        if (frappe.ui.form.editable_row !== me) {\n            me.toggle_editable_row();\n        }\n    });\n\n    $col.df = df;\n    $col.column_index = ci;\n    this.columns[df.fieldname] = $col;\n    this.columns_list.push($col);\n\n    return $col;\n};\n\n// Override Grid.setup_visible_columns\nfrappe.ui.form.Grid.prototype.setup_visible_columns = function () {\n    if (this.visible_columns && this.visible_columns.length > 0) return;\n\n    this.user_defined_columns = [];\n    this.setup_user_defined_columns();\n\n    var total_colsize = 0;\n    var fields =\n        this.user_defined_columns && this.user_defined_columns.length > 0\n            ? this.user_defined_columns\n            : this.editable_fields || this.docfields;\n\n    this.visible_columns = [];\n\n    for (var ci in fields) {\n        var _df = fields[ci];\n        var df =\n            this.user_defined_columns && this.user_defined_columns.length > 0\n                ? _df\n                : this.fields_map[_df.fieldname];\n\n        if (\n            df &&\n            !df.hidden &&\n            (this.editable_fields || df.in_list_view) &&\n            ((this.frm && this.frm.get_perm(df.permlevel, \"read\")) || !this.frm) &&\n            !frappe.model.layout_fields.includes(df.fieldtype)\n        ) {\n            if (df.columns) {\n                df.colsize = df.columns;\n            } else {\n                this.update_default_colsize(df);\n            }\n\n            this.visible_columns.push([df, df.colsize]);\n            total_colsize += df.colsize;\n        }\n    }\n\n    // Example: allow up to 40 colsize\n    var passes = 0;\n    while (total_colsize < 40 && passes < 16) {\n        let increased = false;\n        for (var i in this.visible_columns) {\n            var df = this.visible_columns[i][0];\n            var colsize = this.visible_columns[i][1];\n\n            if (colsize < 10 && frappe.model.is_non_std_field(df.fieldname)) {\n                if (\n                    passes < 3 &&\n                    [\"Int\", \"Currency\", \"Float\", \"Check\", \"Percent\"].indexOf(df.fieldtype) !== -1\n                ) {\n                    continue;\n                }\n                this.visible_columns[i][1] += 1;\n                total_colsize++;\n                increased = true;\n            }\n        }\n        if (!increased) break;\n        passes++;\n    }\n};\n"],
  "mappings": "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",
  "names": []
}
