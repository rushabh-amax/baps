{
  "version": 3,
  "sources": ["../../../../../apps/baps/baps/public/js/customJs.bundle.js"],
  "sourcesContent": ["// -------------------------------- custom file js ------------------------------------\nfunction toggleSearchBar() {\n    const path = window.location.pathname;\n    // console.log(\"toggleSearchBar called, path:\", path); // check if called\n\n    const searchBar = document.querySelector('.input-group.search-bar');\n    if (searchBar) {\n        if (path === '/app/modules') {\n            searchBar.style.display = 'none';\n        } else {\n            searchBar.style.display = ''; // show on all other pages\n        }\n    }\n}\n\nfunction toggleBreadCrumb() {\n    const path = window.location.pathname;\n    const breadcrumbs = document.querySelector('#navbar-breadcrumbs');\n\n    if (breadcrumbs) {\n        if (path === '/app/modules') {\n            breadcrumbs.style.setProperty('display', 'none', 'important');\n        } else {\n            breadcrumbs.style.removeProperty('display');\n        }\n    }\n}\n\n\n\n// Run on initial load\ndocument.addEventListener('DOMContentLoaded', toggleSearchBar);\n\ndocument.addEventListener('DOMContentLoaded', toggleBreadCrumb);\n\n// Run on SPA route change\nfrappe.router.on('change', toggleSearchBar);\nfrappe.router.on('change', toggleBreadCrumb);\n\n\n\n\n// ============================================\n// tab's\n// ============================================\ndocument.addEventListener('DOMContentLoaded', function () {\n  function initSlidingTabs(ul) {\n    if (!ul || ul.dataset.slidingTabsInitialized) return;\n    ul.dataset.slidingTabsInitialized = '1';\n    ul.style.position = ul.style.position || 'relative';\n\n    // create the highlight bar\n    const bar = document.createElement('div');\n    bar.className = 'sliding-tab-bar';\n    Object.assign(bar.style, {\n      position: 'absolute',\n      bottom: '0',\n      height: '4px',\n      background: 'orange',\n      borderRadius: '1em 1em 0em 0em',\n      transition: 'transform 200ms ease, width 200ms ease',\n      left: '0',\n      width: '0',\n      zIndex: '1',\n      pointerEvents: 'none'\n    });\n    ul.appendChild(bar);\n    // console.log(\"tab active slideer insterd\")\n\n    const update = () => {\n      const active =\n        ul.querySelector('.nav-link.active') ||\n        ul.querySelector('.nav-link');\n      if (!active) return;\n      const linkRect = active.getBoundingClientRect();\n      const ulRect = ul.getBoundingClientRect();\n      const left = linkRect.left - ulRect.left + ul.scrollLeft;\n      bar.style.width = linkRect.width + 'px';\n      bar.style.transform = `translateX(${left}px)`;\n    };\n\n    // update on clicks (wait for bootstrap to toggle .active)\n    ul.addEventListener('click', (e) => {\n      const link = e.target.closest('.nav-link');\n      if (link && ul.contains(link)) {\n        setTimeout(update, 150);\n      }\n    });\n\n    // update on resize\n    window.addEventListener('resize', update);\n\n    // observe active class changes & DOM changes inside the tabs\n    const mo = new MutationObserver(() => update());\n    mo.observe(ul, { subtree: true, childList: true, attributes: true, attributeFilter: ['class'] });\n\n    // initial position\n    setTimeout(update, 0);\n  }\n\n  function scanAndInit() {\n    document.querySelectorAll('ul.form-tabs, ul.nav-tabs, #form-tabs').forEach(initSlidingTabs);\n  }\n\n  // initial scan\n  scanAndInit();\n\n  // ERPNext desk is SPA-like; watch for new forms/tabs injected later\n  const bodyObserver = new MutationObserver(() => scanAndInit());\n  bodyObserver.observe(document.body, { childList: true, subtree: true });\n\n  // also rescan after Bootstrap tab show (BS4/BS5 attribute variants)\n  document.addEventListener('click', (e) => {\n    if (e.target.closest('a[data-toggle=\"tab\"], a[data-bs-toggle=\"tab\"]')) {\n      setTimeout(scanAndInit, 200);\n    }\n  });\n});\n\n// ============================================\n// awsomebar shift\n// ============================================\n\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//   console.log(\"Awesomplete shift start\");\n\n//   const observer = new MutationObserver(() => {\n//     // find focused input inside form-grid that has awesomplete\n//     const activeInput = document.querySelector(\n//       '.form-grid .awesomplete input:focus[aria-owns]'\n//     );\n\n//     if (activeInput) {\n//       const listId = activeInput.getAttribute(\"aria-owns\");\n//       const list = document.getElementById(listId);\n\n//       if (list) {\n//         console.log(\"Focused input:\", activeInput.dataset.fieldname, activeInput);\n//         console.log(\"Dropdown list:\", listId, list);\n\n//         // move list to <body> so it's not clipped by table/grid\n//         if (!list.dataset.shifted) {\n//           list.dataset.shifted = \"1\"; \n//           document.body.appendChild(list);\n\n//           // reset base styles\n//           list.style.position = \"absolute\";\n//           list.style.background= \"white\";\n//           list.style.width=\"350px\"\n//           list.style.border=\"1.4px solid whitesmoke\"\n//           list.style.zIndex = \"9999\"; // ensure it's above form\n//           list.hidden = false;\n//         }\n\n//         // always recalc position relative to input\n//         const rect = activeInput.getBoundingClientRect();\n//         list.style.top = rect.bottom + window.scrollY + \"px\";\n//         list.style.left = rect.left + window.scrollX + \"px\";\n//         list.style.width = rect.width + \"px\";\n//       }\n//     }\n//   });\n\n//   observer.observe(document.body, {\n//     childList: true,\n//     subtree: true,\n//   });\n// });\n\n\n\n// ============================================\n// toggle sidebar \n// ============================================\n\n// funtion works like should not show toggle sidebar button on all parent page or workspace pages \n// function toggleSidebarBtn() {\n//     const path = window.location.pathname;\n//     const toggleBtn = document.querySelector('[aria-label=\"Toggle Sidebar\"]');\n\n//     if (!toggleBtn) return;\n//     console.log(\"seeing parent sidebar btn\")\n\n//     // Check if path matches exactly /app/<workspace_name> (no trailing slash or extra parts)\n//     const isTopLevelWorkspace = /^\\/app\\/[^\\/]+$/.test(path);\n\n//     console.log(\"path checked:\" , path)\n\n\n//     if (isTopLevelWorkspace) {\n//         toggleBtn.style.setProperty('display', 'none', 'important');\n//         console.log(\"-----------------------\")\n//         console.log(\"hide the sidebar btn to this path checked:\" , path)\n\n//     } else {\n//         toggleBtn.style.removeProperty('display');\n//         console.log(\"-----------------------\")\n//         console.log(\"show the sidebar btn to this path checked:\" , path)\n\n//     }\n// }\n\n// // // Run on initial load\n// document.addEventListener('DOMContentLoaded', toggleSidebarBtn);\n\n// // Run on SPA route changes (Frappe router)\n// if (frappe && frappe.router) {\n//     frappe.router.on('change', toggleSidebarBtn);\n// }\n\n\n\n//   force theme: \"BAPS\" forever\n// force_baps_theme.js \u2014 Force 'baps' theme for everyone\n\n\n\n// ============================================\n// custom sidebar of erpnext\n// ============================================\n\n// (function () {\n//   if (!window.frappe || !frappe.boot) {\n//     console.log('[MiniSidebar] Not in Desk context. Skipping.');\n//     return;\n//   }\n\n//   console.log('[MiniSidebar] Initializing...');\n\n//   // --- Function to render the sidebar ---\n//   function renderMiniSidebar() {\n//     frappe.call({\n//       method: 'frappe.desk.desktop.get_workspace_sidebar_items',\n//       freeze: false,\n//       callback: function (r) {\n//         console.log('[MiniSidebar] API Response:', r);\n\n//         if (!r.message || !Array.isArray(r.message.pages)) {\n//           console.warn('[MiniSidebar] No workspace data received.');\n//           return;\n//         }\n\n//         // Filter top-level, public, visible workspaces\n//         const topLevelPages = r.message.pages.filter(page => {\n//           const keep = page.public === 1 && page.is_hidden === 0 && page.parent_page === \"\";\n//           console.log(`[MiniSidebar] Page \"${page.name}\" -> ${keep ? 'INCLUDED' : 'SKIPPED'}`);\n//           return keep;\n//         });\n\n//         if (topLevelPages.length === 0) {\n//           console.warn('[MiniSidebar] No top-level workspaces to show.');\n//           return;\n//         }\n\n//         // Create container\n//         let sidebarHTML = `\n//           <div class=\"erpnext-minisidebar\" style=\"\n//             position: fixed;\n//             top: var(--navbar-height, 56px);\n//             left: 0;\n//             height: calc(100vh - var(--navbar-height, 56px));\n//             background: white;\n//             border-right: 1px solid #ebedf0;\n//             z-index: 1030;\n//             padding: 12px 0;\n//             overflow-y: auto;\n//             width: 64px;\n//             display: flex;\n//             flex-direction: column;\n//             align-items: center;\n//           \">\n//             <div class=\"desk-sidebar list-unstyled sidebar-menu\">\n//         `;\n\n//         // Render each item\n//         topLevelPages.forEach(page => {\n//           const route = `/app/${page.name.toLowerCase().replace(/\\s+/g, '-')}`;\n//           const icon = page.icon || 'file';\n//           const label = page.label || page.name;\n\n//           // Determine if we should show controls (drag + three dots)\n//           const showControls = frappe.flags.in_edit_mode || false;\n\n//           sidebarHTML += `\n//             <div class=\"sidebar-item-container is-draggable\" \n//                  item-parent=\"\" \n//                  item-name=\"${page.name}\" \n//                  item-public=\"${page.public}\" \n//                  item-is-hidden=\"${page.is_hidden}\">\n//               <div class=\"desk-sidebar-item standard-sidebar-item\">\n//                 <a href=\"${route}\" class=\"item-anchor\" title=\"${label}\">\n//                   <span class=\"sidebar-item-icon\" item-icon=\"${icon}\">\n//                     <svg class=\"icon icon-md\" aria-hidden=\"true\">\n//                       <use href=\"#icon-${icon}\"></use>\n//                     </svg>\n//                   </span>\n//                   <span class=\"sidebar-item-label\">${label}</span>\n//                 </a>\n//                 <div class=\"sidebar-item-control\" style=\"${showControls ? '' : 'display: none;'}\">\n//                   <!-- Drag Handle -->\n//                   <button class=\"btn btn-secondary btn-xs drag-handle\" title=\"Drag\" style=\"${showControls ? '' : 'display: none;'}\">\n//                     <svg class=\"es-icon es-line icon-xs\" aria-hidden=\"true\">\n//                       <use href=\"#es-line-drag\"></use>\n//                     </svg>\n//                   </button>\n//                   <!-- Three-dot Menu -->\n//                   <div class=\"btn btn-xs setting-btn dropdown-btn\" title=\"Settings\" style=\"${showControls ? '' : 'display: none;'}\">\n//                     <svg class=\"es-icon es-line icon-xs\" aria-hidden=\"true\">\n//                       <use href=\"#es-line-dot-horizontal\"></use>\n//                     </svg>\n//                   </div>\n//                   <!-- Dropdown Menu -->\n//                   <div class=\"dropdown-list hidden\">\n//                     <div class=\"dropdown-item\" title=\"Edit Workspace\" data-action=\"edit\" data-page=\"${page.name}\">\n//                       <span class=\"dropdown-item-icon\">\n//                         <svg class=\"es-icon es-line icon-sm\" aria-hidden=\"true\">\n//                           <use href=\"#es-line-edit\"></use>\n//                         </svg>\n//                       </span>\n//                       <span class=\"dropdown-item-label\">Edit</span>\n//                     </div>\n//                     <div class=\"dropdown-item\" title=\"Duplicate Workspace\" data-action=\"duplicate\" data-page=\"${page.name}\">\n//                       <span class=\"dropdown-item-icon\">\n//                         <svg class=\"es-icon es-line icon-sm\" aria-hidden=\"true\">\n//                           <use href=\"#es-line-duplicate\"></use>\n//                         </svg>\n//                       </span>\n//                       <span class=\"dropdown-item-label\">Duplicate</span>\n//                     </div>\n//                     <div class=\"dropdown-item\" title=\"Hide Workspace\" data-action=\"hide\" data-page=\"${page.name}\">\n//                       <span class=\"dropdown-item-icon\">\n//                         <svg class=\"es-icon es-line icon-sm\" aria-hidden=\"true\">\n//                           <use href=\"#es-line-hide\"></use>\n//                         </svg>\n//                       </span>\n//                       <span class=\"dropdown-item-label\">Hide</span>\n//                     </div>\n//                     <div class=\"dropdown-item\" title=\"Delete Workspace\" data-action=\"delete\" data-page=\"${page.name}\">\n//                       <span class=\"dropdown-item-icon\">\n//                         <svg class=\"icon icon-sm\" aria-hidden=\"true\">\n//                           <use href=\"#icon-delete-active\"></use>\n//                         </svg>\n//                       </span>\n//                       <span class=\"dropdown-item-label\">Delete</span>\n//                     </div>\n//                   </div>\n//                   <!-- Drop Icon (for nested items) -->\n//                   <button class=\"btn-reset drop-icon hidden\">\n//                     <svg class=\"es-icon es-line icon-sm\" aria-hidden=\"true\">\n//                       <use href=\"#es-line-down\"></use>\n//                     </svg>\n//                   </button>\n//                 </div>\n//               </div>\n//               <div class=\"sidebar-child-item nested-container\"></div>\n//             </div>\n//           `;\n//         });\n\n//         sidebarHTML += `\n//             </div>\n//           </div>\n//         `;\n\n//         // Inject into body\n//         document.body.insertAdjacentHTML('afterbegin', sidebarHTML);\n//         console.log('[MiniSidebar] Injected into DOM.');\n\n//         // --- Add Event Listeners ---\n\n//         // Toggle dropdown on three-dot click\n//         $(document).on('click', '.erpnext-minisidebar .setting-btn', function (e) {\n//           e.stopPropagation();\n//           const $dropdown = $(this).siblings('.dropdown-list');\n//           $('.dropdown-list').not($dropdown).addClass('hidden');\n//           $dropdown.toggleClass('hidden');\n//         });\n\n//         // Close dropdown on click outside\n//         $(document).on('click', function (e) {\n//           if (!$(e.target).closest('.setting-btn, .dropdown-list').length) {\n//             $('.dropdown-list').addClass('hidden');\n//           }\n//         });\n\n//         // Handle action clicks\n//         $(document).on('click', '.dropdown-item', function (e) {\n//           e.preventDefault();\n//           const action = $(this).data('action');\n//           const pageName = $(this).data('page');\n\n//           console.log(`[MiniSidebar] Action: ${action} on page: ${pageName}`);\n\n//           if (action === 'edit') {\n//             frappe.set_route('Form', 'Workspace', pageName);\n//           } else if (action === 'duplicate') {\n//             frappe.call({\n//               method: 'frappe.desk.doctype.workspace.workspace.duplicate_workspace',\n//               args: { name: pageName },\n//               callback: function (r) {\n//                 if (r.message) {\n//                   frappe.msgprint(__('Workspace duplicated successfully.'));\n//                   location.reload(); // Refresh to see changes\n//                 }\n//               }\n//             });\n//           } else if (action === 'hide') {\n//             frappe.call({\n//               method: 'frappe.desk.doctype.workspace.workspace.set_hidden',\n//               args: { name: pageName, hidden: 1 },\n//               callback: function (r) {\n//                 if (r.message) {\n//                   frappe.msgprint(__('Workspace hidden successfully.'));\n//                   location.reload(); // Refresh to see changes\n//                 }\n//               }\n//             });\n//           } else if (action === 'delete') {\n//             frappe.confirm(\n//               __('Are you sure you want to delete the workspace \"{0}\"?', [pageName]),\n//               function () {\n//                 frappe.call({\n//                   method: 'frappe.desk.doctype.workspace.workspace.delete_workspace',\n//                   args: { name: pageName },\n//                   callback: function (r) {\n//                     if (r.message) {\n//                       frappe.msgprint(__('Workspace deleted successfully.'));\n//                       location.reload(); // Refresh to see changes\n//                     }\n//                   }\n//                 });\n//               }\n//             );\n//           }\n//         });\n\n//         // Show/hide controls based on edit mode\n//         function updateEditMode() {\n//           const inEditMode = frappe.flags.in_edit_mode;\n//           console.log(`[MiniSidebar] Edit mode: ${inEditMode}`);\n//           $('.sidebar-item-control').css('display', inEditMode ? 'flex' : 'none');\n//           $('.drag-handle, .setting-btn').css('display', inEditMode ? 'inline-flex' : 'none');\n//         }\n\n//         // Initial check\n//         updateEditMode();\n\n//         // Listen for edit mode changes\n//         $(document).on('workspace:edit-mode-changed', updateEditMode);\n//         $(document).on('click', '.edit-workspace-button', function () {\n//           frappe.flags.in_edit_mode = true;\n//           $(document).trigger('workspace:edit-mode-changed');\n//         });\n//         $(document).on('click', '.discard-workspace-button, .save-workspace-button', function () {\n//           frappe.flags.in_edit_mode = false;\n//           $(document).trigger('workspace:edit-mode-changed');\n//         });\n\n//       }\n//     });\n//   }\n\n//   // --- Run on page load ---\n//   document.addEventListener(\"DOMContentLoaded\" , ()=> {\n    \n//     renderMiniSidebar();\n  \n//     // Also re-render if workspace is edited/saved\n//     $(document).on('workspace:updated', renderMiniSidebar);\n//   });\n//   })();\n\n\n\n// ============================================\n// mini sidebar code\n// ============================================\n\n\n//   if (!window.frappe || !frappe.boot) {\n//     console.log('[MiniSidebar] Not in Desk context. Skipping.');\n//     return;\n//   }\n\n//   console.log('[MiniSidebar] Initializing...');\n\n//   frappe.call({\n//     method: 'frappe.desk.desktop.get_workspace_sidebar_items',\n//     freeze: false,\n//     callback: function (r) {\n//       console.log('[MiniSidebar] API Response:', r);\n\n//       if (!r.message || !Array.isArray(r.message.pages)) {\n//         console.warn('[MiniSidebar] No workspace data received.');\n//         return;\n//       }\n\n//       // Filter top-level, public, visible workspaces\n//       const topLevelPages = r.message.pages.filter(page => {\n//         const keep = page.public === 1 && page.is_hidden === 0 && page.parent_page === \"\";\n//         console.log(`[MiniSidebar] Page \"${page.name}\" -> ${keep ? 'INCLUDED' : 'SKIPPED'}`);\n//         return keep;\n//       });\n\n//       if (topLevelPages.length === 0) {\n//         console.warn('[MiniSidebar] No top-level workspaces to show.');\n//         return;\n//       }\n\n//       // Create container\n//       const sidebarHTML = `\n//         <div class=\"erpnext-minisidebar\" style=\"\n//           position: fixed;\n//           top: var(--navbar-height, 56px);\n//           left: 0;\n//           height: calc(100vh - var(--navbar-height, 56px));\n//           background: white;\n//           border-right: 1px solid #ebedf0;\n//           z-index: 1030;\n//           padding: 12px 0;\n//           overflow-y: auto;\n//           width: 64px;\n//           display: flex;\n//           flex-direction: column;\n//           align-items: center;\n//         \">\n//           <div class=\"desk-sidebar list-unstyled sidebar-menu\">\n//             <!-- Items will be injected here -->\n//           </div>\n//         </div>\n//       `;\n\n//       document.body.insertAdjacentHTML('afterbegin', sidebarHTML);\n//       const $sidebarMenu = $('.erpnext-minisidebar .desk-sidebar');\n\n//       // Render each item with native ERPNext styling\n//       topLevelPages.forEach(page => {\n//         const route = `/app/${page.name.toLowerCase().replace(/\\s+/g, '-')}`;\n//         const icon = page.icon || 'file';\n//         const label = page.label || page.name;\n\n//         // Create item HTML mimicking ERPNext's structure\n//         const itemHTML = `\n//           <div class=\"sidebar-item-container is-draggable\" \n//                item-parent=\"\" \n//                item-name=\"${page.name}\" \n//                item-public=\"${page.public}\" \n//                item-is-hidden=\"${page.is_hidden}\">\n//             <div class=\"desk-sidebar-item standard-sidebar-item\">\n//               <a href=\"${route}\" class=\"item-anchor\" title=\"${label}\">\n//                 <span class=\"sidebar-item-icon\" item-icon=\"${icon}\">\n//                   <svg class=\"icon icon-md\" aria-hidden=\"true\">\n//                     <use href=\"#icon-${icon}\"></use>\n//                   </svg>\n//                 </span>\n//                 <span class=\"sidebar-item-label\">${label}</span>\n//               </a>\n//               <div class=\"sidebar-item-control\">\n//                 <!-- Drag Handle -->\n//                 <button class=\"btn btn-secondary btn-xs drag-handle\" title=\"Drag\">\n//                   <svg class=\"es-icon es-line icon-xs\" aria-hidden=\"true\">\n//                     <use href=\"#es-line-drag\"></use>\n//                   </svg>\n//                 </button>\n//                 <!-- Three-dot Menu -->\n//                 <div class=\"btn btn-xs setting-btn dropdown-btn\" title=\"Settings\">\n//                   <svg class=\"es-icon es-line icon-xs\" aria-hidden=\"true\">\n//                     <use href=\"#es-line-dot-horizontal\"></use>\n//                   </svg>\n//                 </div>\n//                 <!-- Dropdown Menu -->\n//                 <div class=\"dropdown-list hidden\">\n//                   <div class=\"dropdown-item\" title=\"Edit Workspace\">\n//                     <span class=\"dropdown-item-icon\">\n//                       <svg class=\"es-icon es-line icon-sm\" aria-hidden=\"true\">\n//                         <use href=\"#es-line-edit\"></use>\n//                       </svg>\n//                     </span>\n//                     <span class=\"dropdown-item-label\">Edit</span>\n//                   </div>\n//                   <div class=\"dropdown-item\" title=\"Duplicate Workspace\">\n//                     <span class=\"dropdown-item-icon\">\n//                       <svg class=\"es-icon es-line icon-sm\" aria-hidden=\"true\">\n//                         <use href=\"#es-line-duplicate\"></use>\n//                       </svg>\n//                     </span>\n//                     <span class=\"dropdown-item-label\">Duplicate</span>\n//                   </div>\n//                   <div class=\"dropdown-item\" title=\"Hide Workspace\">\n//                     <span class=\"dropdown-item-icon\">\n//                       <svg class=\"es-icon es-line icon-sm\" aria-hidden=\"true\">\n//                         <use href=\"#es-line-hide\"></use>\n//                       </svg>\n//                     </span>\n//                     <span class=\"dropdown-item-label\">Hide</span>\n//                   </div>\n//                   <div class=\"dropdown-item\" title=\"Delete Workspace\">\n//                     <span class=\"dropdown-item-icon\">\n//                       <svg class=\"icon icon-sm\" aria-hidden=\"true\">\n//                         <use href=\"#icon-delete-active\"></use>\n//                       </svg>\n//                     </span>\n//                     <span class=\"dropdown-item-label\">Delete</span>\n//                   </div>\n//                 </div>\n//                 <!-- Drop Icon (for nested items) -->\n//                 <button class=\"btn-reset drop-icon hidden\">\n//                   <svg class=\"es-icon es-line icon-sm\" aria-hidden=\"true\">\n//                     <use href=\"#es-line-down\"></use>\n//                   </svg>\n//                 </button>\n//               </div>\n//             </div>\n//             <div class=\"sidebar-child-item nested-container\"></div>\n//           </div>\n//         `;\n\n//         $sidebarMenu.append(itemHTML);\n//       });\n\n//       console.log('[MiniSidebar] Injected into DOM.');\n\n//       // --- Add Event Listeners for Dropdown ---\n//       $(document).on('click', '.erpnext-minisidebar .setting-btn', function (e) {\n//         e.stopPropagation();\n//         const $dropdown = $(this).siblings('.dropdown-list');\n//         $('.dropdown-list').not($dropdown).addClass('hidden');\n//         $dropdown.toggleClass('hidden');\n//       });\n\n//       // Close dropdown on click outside\n//       $(document).on('click', function (e) {\n//         if (!$(e.target).closest('.setting-btn, .dropdown-list').length) {\n//           $('.dropdown-list').addClass('hidden');\n//         }\n//       });\n\n//       // Optional: Add hover effect for active state\n//       $('.erpnext-minisidebar .desk-sidebar-item').hover(\n//         function () { $(this).addClass('selected'); },\n//         function () { $(this).removeClass('selected'); }\n//       );\n\n//     }\n//   });\n// })();"],
  "mappings": "MACA,SAASA,GAAkB,CACvB,IAAMC,EAAO,OAAO,SAAS,SAGvBC,EAAY,SAAS,cAAc,yBAAyB,EAC9DA,IACID,IAAS,eACTC,EAAU,MAAM,QAAU,OAE1BA,EAAU,MAAM,QAAU,GAGtC,CAEA,SAASC,GAAmB,CACxB,IAAMF,EAAO,OAAO,SAAS,SACvBG,EAAc,SAAS,cAAc,qBAAqB,EAE5DA,IACIH,IAAS,eACTG,EAAY,MAAM,YAAY,UAAW,OAAQ,WAAW,EAE5DA,EAAY,MAAM,eAAe,SAAS,EAGtD,CAKA,SAAS,iBAAiB,mBAAoBJ,CAAe,EAE7D,SAAS,iBAAiB,mBAAoBG,CAAgB,EAG9D,OAAO,OAAO,GAAG,SAAUH,CAAe,EAC1C,OAAO,OAAO,GAAG,SAAUG,CAAgB,EAQ3C,SAAS,iBAAiB,mBAAoB,UAAY,CACxD,SAASE,EAAgBC,EAAI,CAC3B,GAAI,CAACA,GAAMA,EAAG,QAAQ,uBAAwB,OAC9CA,EAAG,QAAQ,uBAAyB,IACpCA,EAAG,MAAM,SAAWA,EAAG,MAAM,UAAY,WAGzC,IAAMC,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,UAAY,kBAChB,OAAO,OAAOA,EAAI,MAAO,CACvB,SAAU,WACV,OAAQ,IACR,OAAQ,MACR,WAAY,SACZ,aAAc,kBACd,WAAY,yCACZ,KAAM,IACN,MAAO,IACP,OAAQ,IACR,cAAe,MACjB,CAAC,EACDD,EAAG,YAAYC,CAAG,EAGlB,IAAMC,EAAS,IAAM,CACnB,IAAMC,EACJH,EAAG,cAAc,kBAAkB,GACnCA,EAAG,cAAc,WAAW,EAC9B,GAAI,CAACG,EAAQ,OACb,IAAMC,EAAWD,EAAO,sBAAsB,EACxCE,EAASL,EAAG,sBAAsB,EAClCM,EAAOF,EAAS,KAAOC,EAAO,KAAOL,EAAG,WAC9CC,EAAI,MAAM,MAAQG,EAAS,MAAQ,KACnCH,EAAI,MAAM,UAAY,cAAcK,MACtC,EAGAN,EAAG,iBAAiB,QAAUO,GAAM,CAClC,IAAMC,EAAOD,EAAE,OAAO,QAAQ,WAAW,EACrCC,GAAQR,EAAG,SAASQ,CAAI,GAC1B,WAAWN,EAAQ,GAAG,CAE1B,CAAC,EAGD,OAAO,iBAAiB,SAAUA,CAAM,EAG7B,IAAI,iBAAiB,IAAMA,EAAO,CAAC,EAC3C,QAAQF,EAAI,CAAE,QAAS,GAAM,UAAW,GAAM,WAAY,GAAM,gBAAiB,CAAC,OAAO,CAAE,CAAC,EAG/F,WAAWE,EAAQ,CAAC,CACtB,CAEA,SAASO,GAAc,CACrB,SAAS,iBAAiB,uCAAuC,EAAE,QAAQV,CAAe,CAC5F,CAGAU,EAAY,EAGS,IAAI,iBAAiB,IAAMA,EAAY,CAAC,EAChD,QAAQ,SAAS,KAAM,CAAE,UAAW,GAAM,QAAS,EAAK,CAAC,EAGtE,SAAS,iBAAiB,QAAU,GAAM,CACpC,EAAE,OAAO,QAAQ,+CAA+C,GAClE,WAAWA,EAAa,GAAG,CAE/B,CAAC,CACH,CAAC",
  "names": ["toggleSearchBar", "path", "searchBar", "toggleBreadCrumb", "breadcrumbs", "initSlidingTabs", "ul", "bar", "update", "active", "linkRect", "ulRect", "left", "e", "link", "scanAndInit"]
}
