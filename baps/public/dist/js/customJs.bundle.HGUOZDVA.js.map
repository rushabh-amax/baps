{
  "version": 3,
  "sources": ["../../../../../apps/baps/baps/public/js/customJs.bundle.js"],
  "sourcesContent": ["// function removePageTItles(){\n//   const  pageTitle = document.querySelector(\".page-title\");\n//     // Start observing changes in the body subtree\n//   observer.observe(document.body, {\n//     childList: true,\n//     subtree: true,\n//   });\n\n// }\n// document.addEventListener(\"DOMContentLoaded\", movePageHeadContent);\n\n// sliding active bar for ERPNext form tabs (no frappe.ready)\n\n\n\n// from-tab sliding effect\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  function initSlidingTabs(ul) {\n    if (!ul || ul.dataset.slidingTabsInitialized) return;\n    ul.dataset.slidingTabsInitialized = '1';\n    ul.style.position = ul.style.position || 'relative';\n\n    // create the highlight bar\n    const bar = document.createElement('div');\n    bar.className = 'sliding-tab-bar';\n    Object.assign(bar.style, {\n      position: 'absolute',\n      bottom: '0',\n      height: '4px',\n      background: 'var(--_primary-bg-color)',\n      borderRadius: '1em 1em 0em 0em',\n      transition: 'transform 200ms ease, width 200ms ease',\n      left: '0',\n      width: '0',\n      zIndex: '1',\n      pointerEvents: 'none'\n    });\n    ul.appendChild(bar);\n\n    const update = () => {\n      const active =\n        ul.querySelector('.nav-link.active') ||\n        ul.querySelector('.nav-link');\n      if (!active) return;\n      const linkRect = active.getBoundingClientRect();\n      const ulRect = ul.getBoundingClientRect();\n      const left = linkRect.left - ulRect.left + ul.scrollLeft;\n      bar.style.width = linkRect.width + 'px';\n      bar.style.transform = `translateX(${left}px)`;\n    };\n\n    // update on clicks (wait for bootstrap to toggle .active)\n    ul.addEventListener('click', (e) => {\n      const link = e.target.closest('.nav-link');\n      if (link && ul.contains(link)) {\n        setTimeout(update, 150);\n      }\n    });\n\n    // update on resize\n    window.addEventListener('resize', update);\n\n    // observe active class changes & DOM changes inside the tabs\n    const mo = new MutationObserver(() => update());\n    mo.observe(ul, { subtree: true, childList: true, attributes: true, attributeFilter: ['class'] });\n\n    // initial position\n    setTimeout(update, 0);\n  }\n\n  function scanAndInit() {\n    document.querySelectorAll('ul.form-tabs, ul.nav-tabs, #form-tabs').forEach(initSlidingTabs);\n  }\n\n  // initial scan\n  scanAndInit();\n\n  // ERPNext desk is SPA-like; watch for new forms/tabs injected later\n  const bodyObserver = new MutationObserver(() => scanAndInit());\n  bodyObserver.observe(document.body, { childList: true, subtree: true });\n\n  // also rescan after Bootstrap tab show (BS4/BS5 attribute variants)\n  document.addEventListener('click', (e) => {\n    if (e.target.closest('a[data-toggle=\"tab\"], a[data-bs-toggle=\"tab\"]')) {\n      setTimeout(scanAndInit, 200);\n    }\n  });\n});\n\n\n\n\n\n\n\n// from-tab sliding effect\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  function initSlidingTabs(ul) {\n    if (!ul || ul.dataset.slidingTabsInitialized) return;\n    ul.dataset.slidingTabsInitialized = '1';\n    ul.style.position = ul.style.position || 'relative';\n\n    // create the highlight bar\n    const bar = document.createElement('div');\n    bar.className = 'sliding-tab-bar';\n    Object.assign(bar.style, {\n      position: 'absolute',\n      bottom: '0',\n      height: '4px',\n      background: 'var(--_primary-bg-color)',\n      borderRadius: '1em 1em 0em 0em',\n      transition: 'transform 200ms ease, width 200ms ease',\n      left: '0',\n      width: '0',\n      zIndex: '1',\n      pointerEvents: 'none'\n    });\n    ul.appendChild(bar);\n\n    const update = () => {\n      const active =\n        ul.querySelector('.nav-link.active') ||\n        ul.querySelector('.nav-link');\n      if (!active) return;\n      const linkRect = active.getBoundingClientRect();\n      const ulRect = ul.getBoundingClientRect();\n      const left = linkRect.left - ulRect.left + ul.scrollLeft;\n      bar.style.width = linkRect.width + 'px';\n      bar.style.transform = `translateX(${left}px)`;\n    };\n\n    // update on clicks (wait for bootstrap to toggle .active)\n    ul.addEventListener('click', (e) => {\n      const link = e.target.closest('.nav-link');\n      if (link && ul.contains(link)) {\n        setTimeout(update, 150);\n      }\n    });\n\n    // update on resize\n    window.addEventListener('resize', update);\n\n    // observe active class changes & DOM changes inside the tabs\n    const mo = new MutationObserver(() => update());\n    mo.observe(ul, { subtree: true, childList: true, attributes: true, attributeFilter: ['class'] });\n\n    // initial position\n    setTimeout(update, 0);\n  }\n\n  function scanAndInit() {\n    document.querySelectorAll('ul.form-tabs, ul.nav-tabs, #form-tabs').forEach(initSlidingTabs);\n  }\n\n  // initial scan\n  scanAndInit();\n\n  // ERPNext desk is SPA-like; watch for new forms/tabs injected later\n  const bodyObserver = new MutationObserver(() => scanAndInit());\n  bodyObserver.observe(document.body, { childList: true, subtree: true });\n\n  // also rescan after Bootstrap tab show (BS4/BS5 attribute variants)\n  document.addEventListener('click', (e) => {\n    if (e.target.closest('a[data-toggle=\"tab\"], a[data-bs-toggle=\"tab\"]')) {\n      setTimeout(scanAndInit, 200);\n    }\n  });\n});\n\n\n//  login password\n\n// document.addEventListener(\"DOMContentLoaded\", () => {\n//     const injectToggle = (input) => {\n//         // avoid duplicate injection\n//         if (input.parentNode.querySelector(\".toggle-password\")) return;\n\n//         let toggle = document.createElement(\"div\");\n//         toggle.classList.add(\"toggle-password\");\n//         toggle.innerHTML = `\n//             <svg class=\"icon icon-sm\" aria-hidden=\"true\">\n//                 <use href=\"#icon-unhide\"></use>\n//             </svg>\n//         `;\n\n//         // style position relative so we can absolutely position the icon\n//         input.parentNode.style.position = \"relative\";\n//         toggle.style.position = \"absolute\";\n//         toggle.style.right = \"10px\";\n//         toggle.style.top = \"50%\";\n//         toggle.style.transform = \"translateY(-50%)\";\n//         toggle.style.cursor = \"pointer\";\n\n//         input.parentNode.appendChild(toggle);\n\n//         // toggle logic\n//         toggle.addEventListener(\"click\", () => {\n//             if (input.type === \"password\") {\n//                 input.type = \"text\";\n//                 toggle.querySelector(\"use\").setAttribute(\"href\", \"#icon-hide\");\n//             } else {\n//                 input.type = \"password\";\n//                 toggle.querySelector(\"use\").setAttribute(\"href\", \"#icon-unhide\");\n//             }\n//         });\n//     };\n\n//     // Initial injection\n//     document.querySelectorAll('input[type=\"password\"]').forEach(injectToggle);\n\n//     // Observe for dynamically added inputs\n//     const observer = new MutationObserver((mutations) => {\n//         mutations.forEach((mutation) => {\n//             mutation.addedNodes.forEach((node) => {\n//                 if (node.nodeType === 1) {\n//                     // direct input\n//                     if (node.matches?.('input[type=\"password\"]')) {\n//                         injectToggle(node);\n//                     }\n//                     // nested inputs inside added container\n//                     node.querySelectorAll?.('input[type=\"password\"]').forEach(injectToggle);\n//                 }\n//             });\n//         });\n//     });\n\n//     observer.observe(document.body, { childList: true, subtree: true });\n// });\n\n\n//     // Initial injection\n\n//     // Observe for dynamically added inputs\n//     const observer = new MutationObserver((mutations) => {\n//         mutations.forEach((mutation) => {\n//             mutation.addedNodes.forEach((node) => {\n//                 if (node.nodeType === 1) {\n//                     // direct input\n//                     if (node.matches?.('input[type=\"password\"]')) {\n//                         injectToggle(node);\n//                     }\n//                     // nested inputs inside added container\n//                     node.querySelectorAll?.('input[type=\"password\"]').forEach(injectToggle);\n//                 }\n//             });\n//         });\n//     });\n\n//     observer.observe(document.body, { childList: true, subtree: true });\n\n\n\n// // sidebar remvoe\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//     console.log(\"\u2705 Pure JS script started\");\n\n//     const module_API_ROUTE = \"/api/method/baps.api.login_api.login_with_permissions\";\n\n//     fetch(module_API_ROUTE, {\n//         method: \"GET\",\n//         credentials: \"include\",\n//     })\n//         .then((res) => res.json())\n//         .then((res) => {\n//             const modules = res.message?.modules || [];\n\n//             if (!Array.isArray(modules) || modules.length === 0) {\n//                 console.log(\"\u26A0\uFE0F No modules data from API\");\n//                 return;\n//             }\n\n//             // Extract parent module routes (e.g., \"app/hr\", \"app/leaves\")\n//             const parentRoutes = modules.map((m) =>\n//                 m.route?.replace(/^\\//, \"\") // Remove leading slash\n//             );\n//             console.log(\"\u2705 Parent Module Routes:\", parentRoutes);\n\n//             // Get current route in format: \"app/hr\", \"app/leaves\", etc.\n//             function getCurrentRoute() {\n//                 const pathParts = window.location.pathname.split(\"/\").filter(Boolean);\n//                 if (pathParts[0] === \"app\") {\n//                     return \"app/\" + pathParts.slice(1).join(\"/\");\n//                 }\n//                 return pathParts.join(\"/\") || \"/\";\n//             }\n\n//             // Main function to show/hide sidebar\n//             function toggleSidebar() {\n//                 const currentRoute = getCurrentRoute();\n//                 const side = document.querySelector(\".layout-side-section\");\n\n//                 console.log(\"\uD83D\uDC49 Current Route:\", currentRoute);\n//                 console.log(\"\uD83D\uDC49 Parent Routes:\", parentRoutes);\n//                 console.log(\"\uD83D\uDC49 Sidebar element:\", side);\n\n//                 if (!Array.isArray(parentRoutes)) {\n//                     console.warn(\"\u26A0\uFE0F parentRoutes is invalid\");\n//                     return;\n//                 }\n\n//                 if (side) {\n//                     if (currentRoute && parentRoutes.includes(currentRoute)) {\n//                         side.style.display = \"none\";\n//                         console.log(\"\uD83D\uDED1 Sidebar hidden for parent route:\", currentRoute);\n//                     } else {\n//                         side.style.display = \"\"; // show (default)\n//                         console.log(\"\u2705 Sidebar visible for:\", currentRoute);\n//                     }\n//                 } else {\n//                     console.warn(\"\u26A0\uFE0F Sidebar element not found\");\n//                 }\n//             }\n\n//             // Run on initial load\n//             toggleSidebar();\n\n//             // Handle browser back/forward\n//             window.addEventListener(\"popstate\", toggleSidebar);\n\n//             // Patch history.pushState to dispatch custom event\n//             const originalPushState = history.pushState;\n//             history.pushState = function (...args) {\n//                 originalPushState.apply(this, args);\n//                 window.dispatchEvent(new Event(\"pushstate\"));\n//             };\n\n//             // Listen to pushstate\n//             window.addEventListener(\"pushstate\", toggleSidebar);\n\n//             // Optional: hash-based routing\n//             window.addEventListener(\"hashchange\", toggleSidebar);\n\n//         })\n//         .catch((err) => {\n//             console.error(\"\u274C API fetch error:\", err);\n//         });\n// });\n\n\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//     // \u2705 Only run if we're on a page where sidebar is hidden\n//     const sidebar = document.querySelector(\".layout-side-section\");\n//     const shouldShowBackButton = !sidebar || getComputedStyle(sidebar).display === \"none\";\n\n//     if (!shouldShowBackButton) {\n//         return; // Sidebar is visible \u2192 no need for back button\n//     }\n\n//     // \u2705 Find the navbar nav element: d-none d-sm-flex (right side of nav)\n//     const targetNav = document.querySelector(\"nav.navbar-nav.d-none.d-sm-flex\");\n\n//     if (!targetNav) {\n//         console.warn(\"\u26A0\uFE0F Could not find target navbar (.navbar-nav.d-none.d-sm-flex)\");\n//         return;\n//     }\n\n//     // \u2705 Create back button\n//     const backButtonLi = document.createElement(\"li\");\n//     backButtonLi.className = \"nav-item\";\n\n//     const backButton = document.createElement(\"a\");\n//     backButton.className = \"nav-link pointer\";\n//     backButton.style = \"cursor: pointer; font-weight: 500; padding: 0.5rem 1rem;\";\n//     backButton.innerHTML = `\n//         <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-left\" viewBox=\"0 0 16 16\" style=\"vertical-align: middle; margin-right: 0.3rem;\">\n//             <path fill-rule=\"evenodd\" d=\"M12 8a.5.5 0 0 1-.5.5H5.707l4.147 4.146a.5.5 0 0 1-.708.708l-5-5a.5.5 0 0 1 0-.708l5-5a.5.5 0 1 1 .708.708L5.707 7.5H11.5a.5.5 0 0 1 .5.5z\"/>\n//         </svg>\n//         Back\n//     `;\n\n//     // \u2705 Handle click: go to referrer or fallback to /app/modules\n//     backButton.addEventListener(\"click\", function (e) {\n//         e.preventDefault();\n//         const referrer = document.referrer;\n//         const fallbackUrl = \"/app/modules\"; // or \"/app\" if no modules page\n\n//         // Optional: Don't go back to login or blank\n//         if (referrer && referrer.includes(window.location.origin) && !referrer.includes(\"login\")) {\n//             window.location.href = referrer;\n//         } else {\n//             window.location.href = fallbackUrl;\n//         }\n//     });\n\n//     backButtonLi.appendChild(backButton);\n\n//     // \u2705 Inject at the start of the right navbar\n//     targetNav.prepend(backButtonLi);\n\n//     console.log(\"\u2705 Back button injected into navbar\");\n// });"],
  "mappings": "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",
  "names": []
}
