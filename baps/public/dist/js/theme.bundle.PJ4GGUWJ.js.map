{
  "version": 3,
  "sources": ["../../../../../apps/baps/baps/public/js/theme_switcher.js", "../../../../../apps/baps/baps/public/js/login.bundle.js", "../../../../../apps/baps/baps/public/js/customJs.bundle.js", "../../../../../apps/baps/baps/public/js/breadcrubOverride.js", "../../../../../apps/baps/baps/public/js/grid_overrides.js"],
  "sourcesContent": ["frappe.provide(\"frappe.ui\");\n\nfrappe.ui.ThemeSwitcher = class CustomThemeSwitcher extends frappe.ui.ThemeSwitcher {\n\n    fetch_themes() {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.themes = [\n\t\t\t\t{\n\t\t\t\t\tname: \"light\",\n\t\t\t\t\tlabel:(\"Frappe Light\"),\n\t\t\t\t\tinfo:(\"Light Theme\"),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"dark\",\n\t\t\t\t\tlabel:\"Timeless Night\",\n\t\t\t\t\tinfo:\"Dark Theme\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"automatic\",\n\t\t\t\t\tlabel:\"Automatic\",\n\t\t\t\t\tinfo:\"Uses system's theme to switch between light and dark mode\",\n\t\t\t\t},\n                {\n                    name:\"baps\",\n                    label: \"baps\",\n                    info: \"baps Theme\"\n                }\n              \n\t\t\t];\n\n\t\t\tresolve(this.themes);\n\t\t});\n\t}\n}", "// =============================\n// Custom Password Toggle (No jQuery)\n// =============================\n\n// SVG Icons\nconst eyeSVG = `\n<svg class=\"icon-eye\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M15.0007 12C15.0007 13.6569 13.6576 15 12.0007 15C10.3439 15 9.00073 13.6569 9.00073 12C9.00073 10.3431 10.3439 9 12.0007 9C13.6576 9 15.0007 10.3431 15.0007 12Z\" stroke=\"gray\" stroke-width=\"1.4\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n  <path d=\"M12.0012 5C7.52354 5 3.73326 7.94288 2.45898 12C3.73324 16.0571 7.52354 19 12.0012 19C16.4788 19 20.2691 16.0571 21.5434 12C20.2691 7.94291 16.4788 5 12.0012 5Z\" stroke=\"gray\" stroke-width=\"1.4\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n</svg>\n`;\n\nconst eyeSlashSVG = `\n<svg class=\"icon-eye-slash\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M2.99902 3L20.999 21M9.8433 9.91364C9.32066 10.4536 8.99902 11.1892 8.99902 12C8.99902 13.6569 10.3422 15 11.999 15C12.8215 15 13.5667 14.669 14.1086 14.133M6.49902 6.64715C4.59972 7.90034 3.15305 9.78394 2.45703 12C3.73128 16.0571 7.52159 19 11.9992 19C13.9881 19 15.8414 18.4194 17.3988 17.4184M10.999 5.04939C11.328 5.01673 11.6617 5 11.9992 5C16.4769 5 20.2672 7.94291 21.5414 12C21.2607 12.894 20.8577 13.7338 20.3522 14.5\" stroke=\"gray\" stroke-width=\"1.4\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n</svg>\n`;\n\n// Add a custom toggle button next to password inputs\nfunction addCustomPasswordToggle(input) {\n  console.log(\"in login file : in custom toggle funton\");\n  // Skip if already added\n  if (input.parentNode.querySelector(\".custom-toggle-password\")) return;\n\n  const wrapper = input.parentNode;\n  const button = document.createElement(\"span\");\n  button.classList.add(\"custom-toggle-password\");\n  button.style.cursor = \"pointer\";\n  button.style.marginLeft = \"8px\";\n  button.innerHTML = eyeSlashSVG;\n\n  wrapper.appendChild(button);\n\n  console.log(\"in login file : apped\");\n\n\n  button.addEventListener(\"click\", () => {\n    if (input.type === \"password\") {\n      input.type = \"text\";\n      button.innerHTML = eyeSVG;\n    } else {\n      input.type = \"password\";\n      button.innerHTML = eyeSlashSVG;\n    }\n  });\n}\n\n// =============================\n// Boot Script\n// =============================\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // Hide the original Frappe toggle\n  const style = document.createElement(\"style\");\n  style.innerHTML = `\n    .toggle-password { display: none !important; }\n    .custom-toggle-password svg {\n      vertical-align: middle;\n    }\n  `;\n  document.head.appendChild(style);\n\n  // Add to existing password inputs\n  document.querySelectorAll('input[type=\"password\"]').forEach(addCustomPasswordToggle);\n\n  // Add observer for dynamically added password fields\n  const observer = new MutationObserver(mutations => {\n    mutations.forEach(mutation => {\n      mutation.addedNodes.forEach(node => {\n        if (node.nodeType === 1) {\n          if (node.matches('input[type=\"password\"]')) {\n            addCustomPasswordToggle(node);\n          } else {\n            const inputs = node.querySelectorAll?.('input[type=\"password\"]') || [];\n            inputs.forEach(addCustomPasswordToggle);\n          }\n        }\n      });\n    });\n  });\n\n  observer.observe(document.body, { childList: true, subtree: true });\n});\n\n\n", "// -------------------------------- custom file js ------------------------------------\nfunction toggleSearchBar() {\n    const path = window.location.pathname;\n    // console.log(\"toggleSearchBar called, path:\", path); // check if called\n\n    const searchBar = document.querySelector('.input-group.search-bar');\n    if (searchBar) {\n        if (path === '/app/modules') {\n            searchBar.style.display = 'none';\n        } else {\n            searchBar.style.display = ''; // show on all other pages\n        }\n    }\n}\n\nfunction toggleBreadCrumb() {\n    const path = window.location.pathname;\n    const breadcrumbs = document.querySelector('#navbar-breadcrumbs');\n\n    if (breadcrumbs) {\n        if (path === '/app/modules') {\n            breadcrumbs.style.setProperty('display', 'none', 'important');\n        } else {\n            breadcrumbs.style.removeProperty('display');\n        }\n    }\n}\n\n\n\n// Run on initial load\ndocument.addEventListener('DOMContentLoaded', toggleSearchBar);\n\ndocument.addEventListener('DOMContentLoaded', toggleBreadCrumb);\n\n// Run on SPA route change\nfrappe.router.on('change', toggleSearchBar);\nfrappe.router.on('change', toggleBreadCrumb);\n\n\n\n\n// ============================================\n// tab's\n// ============================================\ndocument.addEventListener('DOMContentLoaded', function () {\n  function initSlidingTabs(ul) {\n    if (!ul || ul.dataset.slidingTabsInitialized) return;\n    ul.dataset.slidingTabsInitialized = '1';\n    ul.style.position = ul.style.position || 'relative';\n\n    // create the highlight bar\n    const bar = document.createElement('div');\n    bar.className = 'sliding-tab-bar';\n    Object.assign(bar.style, {\n      position: 'absolute',\n      bottom: '0',\n      height: '4px',\n      background: 'orange',\n      borderRadius: '1em 1em 0em 0em',\n      transition: 'transform 200ms ease, width 200ms ease',\n      left: '0',\n      width: '0',\n      zIndex: '1',\n      pointerEvents: 'none'\n    });\n    ul.appendChild(bar);\n    // console.log(\"tab active slideer insterd\")\n\n    const update = () => {\n      const active =\n        ul.querySelector('.nav-link.active') ||\n        ul.querySelector('.nav-link');\n      if (!active) return;\n      const linkRect = active.getBoundingClientRect();\n      const ulRect = ul.getBoundingClientRect();\n      const left = linkRect.left - ulRect.left + ul.scrollLeft;\n      bar.style.width = linkRect.width + 'px';\n      bar.style.transform = `translateX(${left}px)`;\n    };\n\n    // update on clicks (wait for bootstrap to toggle .active)\n    ul.addEventListener('click', (e) => {\n      const link = e.target.closest('.nav-link');\n      if (link && ul.contains(link)) {\n        setTimeout(update, 150);\n      }\n    });\n\n    // update on resize\n    window.addEventListener('resize', update);\n\n    // observe active class changes & DOM changes inside the tabs\n    const mo = new MutationObserver(() => update());\n    mo.observe(ul, { subtree: true, childList: true, attributes: true, attributeFilter: ['class'] });\n\n    // initial position\n    setTimeout(update, 0);\n  }\n\n  function scanAndInit() {\n    document.querySelectorAll('ul.form-tabs, ul.nav-tabs, #form-tabs').forEach(initSlidingTabs);\n  }\n\n  // initial scan\n  scanAndInit();\n\n  // ERPNext desk is SPA-like; watch for new forms/tabs injected later\n  const bodyObserver = new MutationObserver(() => scanAndInit());\n  bodyObserver.observe(document.body, { childList: true, subtree: true });\n\n  // also rescan after Bootstrap tab show (BS4/BS5 attribute variants)\n  document.addEventListener('click', (e) => {\n    if (e.target.closest('a[data-toggle=\"tab\"], a[data-bs-toggle=\"tab\"]')) {\n      setTimeout(scanAndInit, 200);\n    }\n  });\n});\n\n// ============================================\n// awsomebar shift\n// ============================================\n\n// document.addEventListener(\"DOMContentLoaded\", function () {\n//   console.log(\"Awesomplete shift start\");\n\n//   const observer = new MutationObserver(() => {\n//     // find focused input inside form-grid that has awesomplete\n//     const activeInput = document.querySelector(\n//       '.form-grid .awesomplete input:focus[aria-owns]'\n//     );\n\n//     if (activeInput) {\n//       const listId = activeInput.getAttribute(\"aria-owns\");\n//       const list = document.getElementById(listId);\n\n//       if (list) {\n//         console.log(\"Focused input:\", activeInput.dataset.fieldname, activeInput);\n//         console.log(\"Dropdown list:\", listId, list);\n\n//         // move list to <body> so it's not clipped by table/grid\n//         if (!list.dataset.shifted) {\n//           list.dataset.shifted = \"1\"; \n//           document.body.appendChild(list);\n\n//           // reset base styles\n//           list.style.position = \"absolute\";\n//           list.style.background= \"white\";\n//           list.style.width=\"350px\"\n//           list.style.border=\"1.4px solid whitesmoke\"\n//           list.style.zIndex = \"9999\"; // ensure it's above form\n//           list.hidden = false;\n//         }\n\n//         // always recalc position relative to input\n//         const rect = activeInput.getBoundingClientRect();\n//         list.style.top = rect.bottom + window.scrollY + \"px\";\n//         list.style.left = rect.left + window.scrollX + \"px\";\n//         list.style.width = rect.width + \"px\";\n//       }\n//     }\n//   });\n\n//   observer.observe(document.body, {\n//     childList: true,\n//     subtree: true,\n//   });\n// });\n\n\n\n// ============================================\n// toggle sidebar \n// ============================================\n\n// funtion works like should not show toggle sidebar button on all parent page or workspace pages \n// function toggleSidebarBtn() {\n//     const path = window.location.pathname;\n//     const toggleBtn = document.querySelector('[aria-label=\"Toggle Sidebar\"]');\n\n//     if (!toggleBtn) return;\n//     console.log(\"seeing parent sidebar btn\")\n\n//     // Check if path matches exactly /app/<workspace_name> (no trailing slash or extra parts)\n//     const isTopLevelWorkspace = /^\\/app\\/[^\\/]+$/.test(path);\n\n//     console.log(\"path checked:\" , path)\n\n\n//     if (isTopLevelWorkspace) {\n//         toggleBtn.style.setProperty('display', 'none', 'important');\n//         console.log(\"-----------------------\")\n//         console.log(\"hide the sidebar btn to this path checked:\" , path)\n\n//     } else {\n//         toggleBtn.style.removeProperty('display');\n//         console.log(\"-----------------------\")\n//         console.log(\"show the sidebar btn to this path checked:\" , path)\n\n//     }\n// }\n\n// // // Run on initial load\n// document.addEventListener('DOMContentLoaded', toggleSidebarBtn);\n\n// // Run on SPA route changes (Frappe router)\n// if (frappe && frappe.router) {\n//     frappe.router.on('change', toggleSidebarBtn);\n// }\n\n\n\n//   force theme: \"BAPS\" forever\n// force_baps_theme.js \u2014 Force 'baps' theme for everyone\n\n\n\n// ============================================\n// custom sidebar of erpnext\n// ============================================\n\n// (function () {\n//   if (!window.frappe || !frappe.boot) {\n//     console.log('[MiniSidebar] Not in Desk context. Skipping.');\n//     return;\n//   }\n\n//   console.log('[MiniSidebar] Initializing...');\n\n//   // --- Function to render the sidebar ---\n//   function renderMiniSidebar() {\n//     frappe.call({\n//       method: 'frappe.desk.desktop.get_workspace_sidebar_items',\n//       freeze: false,\n//       callback: function (r) {\n//         console.log('[MiniSidebar] API Response:', r);\n\n//         if (!r.message || !Array.isArray(r.message.pages)) {\n//           console.warn('[MiniSidebar] No workspace data received.');\n//           return;\n//         }\n\n//         // Filter top-level, public, visible workspaces\n//         const topLevelPages = r.message.pages.filter(page => {\n//           const keep = page.public === 1 && page.is_hidden === 0 && page.parent_page === \"\";\n//           console.log(`[MiniSidebar] Page \"${page.name}\" -> ${keep ? 'INCLUDED' : 'SKIPPED'}`);\n//           return keep;\n//         });\n\n//         if (topLevelPages.length === 0) {\n//           console.warn('[MiniSidebar] No top-level workspaces to show.');\n//           return;\n//         }\n\n//         // Create container\n//         let sidebarHTML = `\n//           <div class=\"erpnext-minisidebar\" style=\"\n//             position: fixed;\n//             top: var(--navbar-height, 56px);\n//             left: 0;\n//             height: calc(100vh - var(--navbar-height, 56px));\n//             background: white;\n//             border-right: 1px solid #ebedf0;\n//             z-index: 1030;\n//             padding: 12px 0;\n//             overflow-y: auto;\n//             width: 64px;\n//             display: flex;\n//             flex-direction: column;\n//             align-items: center;\n//           \">\n//             <div class=\"desk-sidebar list-unstyled sidebar-menu\">\n//         `;\n\n//         // Render each item\n//         topLevelPages.forEach(page => {\n//           const route = `/app/${page.name.toLowerCase().replace(/\\s+/g, '-')}`;\n//           const icon = page.icon || 'file';\n//           const label = page.label || page.name;\n\n//           // Determine if we should show controls (drag + three dots)\n//           const showControls = frappe.flags.in_edit_mode || false;\n\n//           sidebarHTML += `\n//             <div class=\"sidebar-item-container is-draggable\" \n//                  item-parent=\"\" \n//                  item-name=\"${page.name}\" \n//                  item-public=\"${page.public}\" \n//                  item-is-hidden=\"${page.is_hidden}\">\n//               <div class=\"desk-sidebar-item standard-sidebar-item\">\n//                 <a href=\"${route}\" class=\"item-anchor\" title=\"${label}\">\n//                   <span class=\"sidebar-item-icon\" item-icon=\"${icon}\">\n//                     <svg class=\"icon icon-md\" aria-hidden=\"true\">\n//                       <use href=\"#icon-${icon}\"></use>\n//                     </svg>\n//                   </span>\n//                   <span class=\"sidebar-item-label\">${label}</span>\n//                 </a>\n//                 <div class=\"sidebar-item-control\" style=\"${showControls ? '' : 'display: none;'}\">\n//                   <!-- Drag Handle -->\n//                   <button class=\"btn btn-secondary btn-xs drag-handle\" title=\"Drag\" style=\"${showControls ? '' : 'display: none;'}\">\n//                     <svg class=\"es-icon es-line icon-xs\" aria-hidden=\"true\">\n//                       <use href=\"#es-line-drag\"></use>\n//                     </svg>\n//                   </button>\n//                   <!-- Three-dot Menu -->\n//                   <div class=\"btn btn-xs setting-btn dropdown-btn\" title=\"Settings\" style=\"${showControls ? '' : 'display: none;'}\">\n//                     <svg class=\"es-icon es-line icon-xs\" aria-hidden=\"true\">\n//                       <use href=\"#es-line-dot-horizontal\"></use>\n//                     </svg>\n//                   </div>\n//                   <!-- Dropdown Menu -->\n//                   <div class=\"dropdown-list hidden\">\n//                     <div class=\"dropdown-item\" title=\"Edit Workspace\" data-action=\"edit\" data-page=\"${page.name}\">\n//                       <span class=\"dropdown-item-icon\">\n//                         <svg class=\"es-icon es-line icon-sm\" aria-hidden=\"true\">\n//                           <use href=\"#es-line-edit\"></use>\n//                         </svg>\n//                       </span>\n//                       <span class=\"dropdown-item-label\">Edit</span>\n//                     </div>\n//                     <div class=\"dropdown-item\" title=\"Duplicate Workspace\" data-action=\"duplicate\" data-page=\"${page.name}\">\n//                       <span class=\"dropdown-item-icon\">\n//                         <svg class=\"es-icon es-line icon-sm\" aria-hidden=\"true\">\n//                           <use href=\"#es-line-duplicate\"></use>\n//                         </svg>\n//                       </span>\n//                       <span class=\"dropdown-item-label\">Duplicate</span>\n//                     </div>\n//                     <div class=\"dropdown-item\" title=\"Hide Workspace\" data-action=\"hide\" data-page=\"${page.name}\">\n//                       <span class=\"dropdown-item-icon\">\n//                         <svg class=\"es-icon es-line icon-sm\" aria-hidden=\"true\">\n//                           <use href=\"#es-line-hide\"></use>\n//                         </svg>\n//                       </span>\n//                       <span class=\"dropdown-item-label\">Hide</span>\n//                     </div>\n//                     <div class=\"dropdown-item\" title=\"Delete Workspace\" data-action=\"delete\" data-page=\"${page.name}\">\n//                       <span class=\"dropdown-item-icon\">\n//                         <svg class=\"icon icon-sm\" aria-hidden=\"true\">\n//                           <use href=\"#icon-delete-active\"></use>\n//                         </svg>\n//                       </span>\n//                       <span class=\"dropdown-item-label\">Delete</span>\n//                     </div>\n//                   </div>\n//                   <!-- Drop Icon (for nested items) -->\n//                   <button class=\"btn-reset drop-icon hidden\">\n//                     <svg class=\"es-icon es-line icon-sm\" aria-hidden=\"true\">\n//                       <use href=\"#es-line-down\"></use>\n//                     </svg>\n//                   </button>\n//                 </div>\n//               </div>\n//               <div class=\"sidebar-child-item nested-container\"></div>\n//             </div>\n//           `;\n//         });\n\n//         sidebarHTML += `\n//             </div>\n//           </div>\n//         `;\n\n//         // Inject into body\n//         document.body.insertAdjacentHTML('afterbegin', sidebarHTML);\n//         console.log('[MiniSidebar] Injected into DOM.');\n\n//         // --- Add Event Listeners ---\n\n//         // Toggle dropdown on three-dot click\n//         $(document).on('click', '.erpnext-minisidebar .setting-btn', function (e) {\n//           e.stopPropagation();\n//           const $dropdown = $(this).siblings('.dropdown-list');\n//           $('.dropdown-list').not($dropdown).addClass('hidden');\n//           $dropdown.toggleClass('hidden');\n//         });\n\n//         // Close dropdown on click outside\n//         $(document).on('click', function (e) {\n//           if (!$(e.target).closest('.setting-btn, .dropdown-list').length) {\n//             $('.dropdown-list').addClass('hidden');\n//           }\n//         });\n\n//         // Handle action clicks\n//         $(document).on('click', '.dropdown-item', function (e) {\n//           e.preventDefault();\n//           const action = $(this).data('action');\n//           const pageName = $(this).data('page');\n\n//           console.log(`[MiniSidebar] Action: ${action} on page: ${pageName}`);\n\n//           if (action === 'edit') {\n//             frappe.set_route('Form', 'Workspace', pageName);\n//           } else if (action === 'duplicate') {\n//             frappe.call({\n//               method: 'frappe.desk.doctype.workspace.workspace.duplicate_workspace',\n//               args: { name: pageName },\n//               callback: function (r) {\n//                 if (r.message) {\n//                   frappe.msgprint(__('Workspace duplicated successfully.'));\n//                   location.reload(); // Refresh to see changes\n//                 }\n//               }\n//             });\n//           } else if (action === 'hide') {\n//             frappe.call({\n//               method: 'frappe.desk.doctype.workspace.workspace.set_hidden',\n//               args: { name: pageName, hidden: 1 },\n//               callback: function (r) {\n//                 if (r.message) {\n//                   frappe.msgprint(__('Workspace hidden successfully.'));\n//                   location.reload(); // Refresh to see changes\n//                 }\n//               }\n//             });\n//           } else if (action === 'delete') {\n//             frappe.confirm(\n//               __('Are you sure you want to delete the workspace \"{0}\"?', [pageName]),\n//               function () {\n//                 frappe.call({\n//                   method: 'frappe.desk.doctype.workspace.workspace.delete_workspace',\n//                   args: { name: pageName },\n//                   callback: function (r) {\n//                     if (r.message) {\n//                       frappe.msgprint(__('Workspace deleted successfully.'));\n//                       location.reload(); // Refresh to see changes\n//                     }\n//                   }\n//                 });\n//               }\n//             );\n//           }\n//         });\n\n//         // Show/hide controls based on edit mode\n//         function updateEditMode() {\n//           const inEditMode = frappe.flags.in_edit_mode;\n//           console.log(`[MiniSidebar] Edit mode: ${inEditMode}`);\n//           $('.sidebar-item-control').css('display', inEditMode ? 'flex' : 'none');\n//           $('.drag-handle, .setting-btn').css('display', inEditMode ? 'inline-flex' : 'none');\n//         }\n\n//         // Initial check\n//         updateEditMode();\n\n//         // Listen for edit mode changes\n//         $(document).on('workspace:edit-mode-changed', updateEditMode);\n//         $(document).on('click', '.edit-workspace-button', function () {\n//           frappe.flags.in_edit_mode = true;\n//           $(document).trigger('workspace:edit-mode-changed');\n//         });\n//         $(document).on('click', '.discard-workspace-button, .save-workspace-button', function () {\n//           frappe.flags.in_edit_mode = false;\n//           $(document).trigger('workspace:edit-mode-changed');\n//         });\n\n//       }\n//     });\n//   }\n\n//   // --- Run on page load ---\n//   document.addEventListener(\"DOMContentLoaded\" , ()=> {\n    \n//     renderMiniSidebar();\n  \n//     // Also re-render if workspace is edited/saved\n//     $(document).on('workspace:updated', renderMiniSidebar);\n//   });\n//   })();\n\n\n\n// ============================================\n// mini sidebar code\n// ============================================\n\n\n//   if (!window.frappe || !frappe.boot) {\n//     console.log('[MiniSidebar] Not in Desk context. Skipping.');\n//     return;\n//   }\n\n//   console.log('[MiniSidebar] Initializing...');\n\n//   frappe.call({\n//     method: 'frappe.desk.desktop.get_workspace_sidebar_items',\n//     freeze: false,\n//     callback: function (r) {\n//       console.log('[MiniSidebar] API Response:', r);\n\n//       if (!r.message || !Array.isArray(r.message.pages)) {\n//         console.warn('[MiniSidebar] No workspace data received.');\n//         return;\n//       }\n\n//       // Filter top-level, public, visible workspaces\n//       const topLevelPages = r.message.pages.filter(page => {\n//         const keep = page.public === 1 && page.is_hidden === 0 && page.parent_page === \"\";\n//         console.log(`[MiniSidebar] Page \"${page.name}\" -> ${keep ? 'INCLUDED' : 'SKIPPED'}`);\n//         return keep;\n//       });\n\n//       if (topLevelPages.length === 0) {\n//         console.warn('[MiniSidebar] No top-level workspaces to show.');\n//         return;\n//       }\n\n//       // Create container\n//       const sidebarHTML = `\n//         <div class=\"erpnext-minisidebar\" style=\"\n//           position: fixed;\n//           top: var(--navbar-height, 56px);\n//           left: 0;\n//           height: calc(100vh - var(--navbar-height, 56px));\n//           background: white;\n//           border-right: 1px solid #ebedf0;\n//           z-index: 1030;\n//           padding: 12px 0;\n//           overflow-y: auto;\n//           width: 64px;\n//           display: flex;\n//           flex-direction: column;\n//           align-items: center;\n//         \">\n//           <div class=\"desk-sidebar list-unstyled sidebar-menu\">\n//             <!-- Items will be injected here -->\n//           </div>\n//         </div>\n//       `;\n\n//       document.body.insertAdjacentHTML('afterbegin', sidebarHTML);\n//       const $sidebarMenu = $('.erpnext-minisidebar .desk-sidebar');\n\n//       // Render each item with native ERPNext styling\n//       topLevelPages.forEach(page => {\n//         const route = `/app/${page.name.toLowerCase().replace(/\\s+/g, '-')}`;\n//         const icon = page.icon || 'file';\n//         const label = page.label || page.name;\n\n//         // Create item HTML mimicking ERPNext's structure\n//         const itemHTML = `\n//           <div class=\"sidebar-item-container is-draggable\" \n//                item-parent=\"\" \n//                item-name=\"${page.name}\" \n//                item-public=\"${page.public}\" \n//                item-is-hidden=\"${page.is_hidden}\">\n//             <div class=\"desk-sidebar-item standard-sidebar-item\">\n//               <a href=\"${route}\" class=\"item-anchor\" title=\"${label}\">\n//                 <span class=\"sidebar-item-icon\" item-icon=\"${icon}\">\n//                   <svg class=\"icon icon-md\" aria-hidden=\"true\">\n//                     <use href=\"#icon-${icon}\"></use>\n//                   </svg>\n//                 </span>\n//                 <span class=\"sidebar-item-label\">${label}</span>\n//               </a>\n//               <div class=\"sidebar-item-control\">\n//                 <!-- Drag Handle -->\n//                 <button class=\"btn btn-secondary btn-xs drag-handle\" title=\"Drag\">\n//                   <svg class=\"es-icon es-line icon-xs\" aria-hidden=\"true\">\n//                     <use href=\"#es-line-drag\"></use>\n//                   </svg>\n//                 </button>\n//                 <!-- Three-dot Menu -->\n//                 <div class=\"btn btn-xs setting-btn dropdown-btn\" title=\"Settings\">\n//                   <svg class=\"es-icon es-line icon-xs\" aria-hidden=\"true\">\n//                     <use href=\"#es-line-dot-horizontal\"></use>\n//                   </svg>\n//                 </div>\n//                 <!-- Dropdown Menu -->\n//                 <div class=\"dropdown-list hidden\">\n//                   <div class=\"dropdown-item\" title=\"Edit Workspace\">\n//                     <span class=\"dropdown-item-icon\">\n//                       <svg class=\"es-icon es-line icon-sm\" aria-hidden=\"true\">\n//                         <use href=\"#es-line-edit\"></use>\n//                       </svg>\n//                     </span>\n//                     <span class=\"dropdown-item-label\">Edit</span>\n//                   </div>\n//                   <div class=\"dropdown-item\" title=\"Duplicate Workspace\">\n//                     <span class=\"dropdown-item-icon\">\n//                       <svg class=\"es-icon es-line icon-sm\" aria-hidden=\"true\">\n//                         <use href=\"#es-line-duplicate\"></use>\n//                       </svg>\n//                     </span>\n//                     <span class=\"dropdown-item-label\">Duplicate</span>\n//                   </div>\n//                   <div class=\"dropdown-item\" title=\"Hide Workspace\">\n//                     <span class=\"dropdown-item-icon\">\n//                       <svg class=\"es-icon es-line icon-sm\" aria-hidden=\"true\">\n//                         <use href=\"#es-line-hide\"></use>\n//                       </svg>\n//                     </span>\n//                     <span class=\"dropdown-item-label\">Hide</span>\n//                   </div>\n//                   <div class=\"dropdown-item\" title=\"Delete Workspace\">\n//                     <span class=\"dropdown-item-icon\">\n//                       <svg class=\"icon icon-sm\" aria-hidden=\"true\">\n//                         <use href=\"#icon-delete-active\"></use>\n//                       </svg>\n//                     </span>\n//                     <span class=\"dropdown-item-label\">Delete</span>\n//                   </div>\n//                 </div>\n//                 <!-- Drop Icon (for nested items) -->\n//                 <button class=\"btn-reset drop-icon hidden\">\n//                   <svg class=\"es-icon es-line icon-sm\" aria-hidden=\"true\">\n//                     <use href=\"#es-line-down\"></use>\n//                   </svg>\n//                 </button>\n//               </div>\n//             </div>\n//             <div class=\"sidebar-child-item nested-container\"></div>\n//           </div>\n//         `;\n\n//         $sidebarMenu.append(itemHTML);\n//       });\n\n//       console.log('[MiniSidebar] Injected into DOM.');\n\n//       // --- Add Event Listeners for Dropdown ---\n//       $(document).on('click', '.erpnext-minisidebar .setting-btn', function (e) {\n//         e.stopPropagation();\n//         const $dropdown = $(this).siblings('.dropdown-list');\n//         $('.dropdown-list').not($dropdown).addClass('hidden');\n//         $dropdown.toggleClass('hidden');\n//       });\n\n//       // Close dropdown on click outside\n//       $(document).on('click', function (e) {\n//         if (!$(e.target).closest('.setting-btn, .dropdown-list').length) {\n//           $('.dropdown-list').addClass('hidden');\n//         }\n//       });\n\n//       // Optional: Add hover effect for active state\n//       $('.erpnext-minisidebar .desk-sidebar-item').hover(\n//         function () { $(this).addClass('selected'); },\n//         function () { $(this).removeClass('selected'); }\n//       );\n\n//     }\n//   });\n// })();", "//              ============== navbar breadcrub ==============\n\n// =======================================================================\n//  relocate breadcrub\n// =======================================================================\nfunction relocateBreadcrumbs() {\n    const sticky = document.querySelector(\".sticky-top\");\n    const header = sticky?.querySelector(\"header.navbar\");\n    const breadcrumbs = document.getElementById(\"navbar-breadcrumbs\");\n\n    if (sticky && header && breadcrumbs) {\n        // If breadcrumbs are still inside header \u2192 move them after header\n        if (header.contains(breadcrumbs)) {\n            header.after(breadcrumbs);\n            console.log(\"\u2705 Breadcrumbs moved outside <header> into sticky-top\");\n        }\n\n        // Always ensure \"Modules\" is the first <li>\n        const firstLi = breadcrumbs.querySelector(\"li:first-child a\");\n        if (!firstLi || firstLi.getAttribute(\"href\") !== \"/app/modules\") {\n            const modulesLink = document.createElement(\"a\");\n            modulesLink.href = \"/app/modules\";\n            modulesLink.textContent = \"Modules\";\n            modulesLink.classList.add(\"navbar-breadcrumb-link\");\n            modulesLink.style.cursor = \"pointer\";\n            modulesLink.style.fontWeight = \"600\";\n            modulesLink.style.textDecoration = \"none\";\n\n            const li = document.createElement(\"li\");\n            li.appendChild(modulesLink);\n\n            breadcrumbs.insertBefore(li, breadcrumbs.firstChild || null);\n            console.log(\"\u2705 'Modules' breadcrumb injected once\");\n        }\n    }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    let attempts = 0;\n    const timer = setInterval(() => {\n        const bc = document.getElementById(\"navbar-breadcrumbs\");\n        if (bc || attempts > 20) {\n            clearInterval(timer);\n            relocateBreadcrumbs();\n\n            // Watch for re-renders\n            const observer = new MutationObserver(relocateBreadcrumbs);\n            observer.observe(document.body, { childList: true, subtree: true });\n        }\n        attempts++;\n    }, 200);\n\n\n\n\n\n});\n\n\n\n// =======================================================================\n//  hide breadcrub on app/modules page\n// =======================================================================\n(function () {\n    function applyHide() {\n        const route = frappe.get_route ? frappe.get_route() : null;\n        const isModulesPage = Array.isArray(route) && route[0] === 'modules';\n        const bc = document.getElementById('navbar-breadcrumbs');\n\n        // console.log(\"we are in hide navbreadcrub\");\n\n        if (!bc) {\n            // console.log(\"\u23F3 #navbar-breadcrumbs not found\");\n            return;\n        }\n\n        if (isModulesPage) {\n            bc.classList.add('hide-breadcrumb-force');\n            // console.log(\"\u2705 HIDING breadcrumbs on /modules\");\n        } else {\n            bc.classList.remove('hide-breadcrumb-force');\n            // console.log(\"\u2705 SHOWING breadcrumbs on other routes\");\n        }\n    }\n\n    // Wait until frappe is defined\n    function initWhenReady() {\n        if (typeof frappe !== \"undefined\" && frappe.get_route && frappe.router) {\n            // console.log(\"\uD83D\uDE80 frappe is ready, initializing applyHide...\");\n            applyHide();\n\n            // React to route changes\n            frappe.router.on('change', () => {\n                // console.log(\"\uD83D\uDD04 Route changed, re-applying hide/show...\");\n                setTimeout(applyHide, 100);\n            });\n        } else {\n            // Retry after a bit if frappe not ready yet\n            setTimeout(initWhenReady, 100);\n        }\n    }\n\n    // Start waiting for frappe\n    document.addEventListener(\"DOMContentLoaded\", initWhenReady);\n})();\n\n// ============================\n// back button\n// ==============================\n (function() {\n  // console.log(\"[Back Button] Script loaded. Waiting for navbar...\");\n\n  let backButtonInjected = false;\n\n  function injectBackButton() {\n    if (document.getElementById('frappe-back-btn')) {\n      // console.log(\"[Back Button] Already exists. Skipping.\");\n      return true;\n    }\n\n    const navbarNav = document.querySelector('header.navbar ul.navbar-nav');\n    if (!navbarNav) {\n      // console.warn(\"[Back Button] \u274C ul.navbar-nav not found in header. Retrying...\");\n      return false;\n    }\n\n    const backItem = document.createElement('li');\n    backItem.className = 'nav-item';\n    backItem.innerHTML = `\n\n\n    <button \n    id=\"frappe-back-btn\" \n    class=\"text-muted btn btn-default prev-doc icon-btn\" \n    title=\"\" data-original-title=\"back button\"   \n    onclick=\"console.log('[Back Button] Navigating back...'); window.history.back();\"\n    >\n\t\t<svg class=\"es-icon es-line  icon-sm\" style=\"\" aria-hidden=\"true\">\n\t\t\t<use class=\"\" href=\"#es-line-left-chevron\"></use>\n\t\t</svg>\n\t</button>\n\n    `;\n\n    const navItems = navbarNav.querySelectorAll('li.nav-item');\n    if (navItems.length >= 2) {\n      navbarNav.insertBefore(backItem, navItems[navItems.length - 1]);\n    } else {\n      navbarNav.appendChild(backItem);\n    }\n\n    // console.log(\"[Back Button] \u2705 Successfully injected into navbar-nav.\");\n    backButtonInjected = true;\n    return true;\n  }\n\n  function shouldHideOnHomePage() {\n    // Check via Frappe route (if available)\n    if (typeof frappe !== 'undefined' && frappe.get_route) {\n      const route = frappe.get_route();\n      if (Array.isArray(route) && route[0] === 'home') {\n        return true;\n      }\n    }\n\n    // Fallback: check URL directly\n    const path = window.location.pathname;\n    return path === '/app/home' || path.startsWith('/app/home');\n  }\n\n  function updateVisibility() {\n    const backButton = document.getElementById('frappe-back-btn');\n    if (!backButton) return;\n\n    const listItem = backButton.closest('li.nav-item');\n    if (!listItem) return;\n\n    const isHomePage = shouldHideOnHomePage();\n\n    if (isHomePage) {\n      listItem.style.display = 'none';\n      // console.log(\"[Back Button] \u2705 Hidden on /app/home\");\n    } else {\n      listItem.style.display = '';\n      // console.log(\"[Back Button] \u2705 Shown on non-home page\");\n    }\n  }\n\n  function tryInject(maxAttempts = 10, interval = 500) {\n    let attempts = 0;\n    const attempt = () => {\n      attempts++;\n      const success = injectBackButton();\n      if (success) {\n        // console.log(\"[Back Button] \uD83C\uDF89 Injection complete.\");\n        if (typeof frappe !== \"undefined\" && frappe.router) {\n          frappe.router.on('change', () => {\n            // console.log(\"[Back Button] \uD83D\uDD04 Route changed, updating visibility...\");\n            setTimeout(updateVisibility, 100);\n          });\n        }\n        updateVisibility();\n      } else if (attempts < maxAttempts) {\n        // console.log(`[Back Button] \u23F3 Retry ${attempts}/${maxAttempts}...`);\n        setTimeout(attempt, interval);\n      } else {\n        // console.error(\"[Back Button] \u274C Failed to inject after\", maxAttempts, \"attempts.\");\n      }\n    };\n    attempt();\n  }\n\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => tryInject());\n  } else {\n    tryInject();\n  }\n})();\n\n\n\n// =============================\n// module button\n// ==============================\n(function() {\n  // console.log(\"[Modules Button] Script loaded. Waiting for navbar...\");\n\n  let modulesButtonInjected = false;\n\n  function injectModulesButton() {\n    if (document.getElementById('frappe-modules-btn')) {\n      // console.log(\"[Modules Button] Already exists. Skipping.\");\n      return true;\n    }\n\n    const navbarNav = document.querySelector('header.navbar ul.navbar-nav');\n    if (!navbarNav) {\n      // console.warn(\"[Modules Button] \u274C ul.navbar-nav not found in header. Retrying...\");\n      return false;\n    }\n\n    const modulesItem = document.createElement('li');\n    modulesItem.className = 'nav-item';\n    modulesItem.innerHTML = `\n      <button \n        id=\"frappe-modules-btn\" \n        class=\"text-muted btn  prev-doc icon-btn\" \n        title=\"Modules\" \n        data-original-title=\"Modules\"\n        onclick=\"window.location.href='/app/modules'\"\n      >\n<svg  viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"> <path d=\"M20 20L18.2678 18.2678M18.2678 18.2678C18.7202 17.8154 19 17.1904 19 16.5C19 15.1193 17.8807 14 16.5 14C15.1193 14 14 15.1193 14 16.5C14 17.8807 15.1193 19 16.5 19C17.1904 19 17.8154 18.7202 18.2678 18.2678ZM15.6 10H18.4C18.9601 10 19.2401 10 19.454 9.89101C19.6422 9.79513 19.7951 9.64215 19.891 9.45399C20 9.24008 20 8.96005 20 8.4V5.6C20 5.03995 20 4.75992 19.891 4.54601C19.7951 4.35785 19.6422 4.20487 19.454 4.10899C19.2401 4 18.9601 4 18.4 4H15.6C15.0399 4 14.7599 4 14.546 4.10899C14.3578 4.20487 14.2049 4.35785 14.109 4.54601C14 4.75992 14 5.03995 14 5.6V8.4C14 8.96005 14 9.24008 14.109 9.45399C14.2049 9.64215 14.3578 9.79513 14.546 9.89101C14.7599 10 15.0399 10 15.6 10ZM5.6 10H8.4C8.96005 10 9.24008 10 9.45399 9.89101C9.64215 9.79513 9.79513 9.64215 9.89101 9.45399C10 9.24008 10 8.96005 10 8.4V5.6C10 5.03995 10 4.75992 9.89101 4.54601C9.79513 4.35785 9.64215 4.20487 9.45399 4.10899C9.24008 4 8.96005 4 8.4 4H5.6C5.03995 4 4.75992 4 4.54601 4.10899C4.35785 4.20487 4.20487 4.35785 4.10899 4.54601C4 4.75992 4 5.03995 4 5.6V8.4C4 8.96005 4 9.24008 4.10899 9.45399C4.20487 9.64215 4.35785 9.79513 4.54601 9.89101C4.75992 10 5.03995 10 5.6 10ZM5.6 20H8.4C8.96005 20 9.24008 20 9.45399 19.891C9.64215 19.7951 9.79513 19.6422 9.89101 19.454C10 19.2401 10 18.9601 10 18.4V15.6C10 15.0399 10 14.7599 9.89101 14.546C9.79513 14.3578 9.64215 14.2049 9.45399 14.109C9.24008 14 8.96005 14 8.4 14H5.6C5.03995 14 4.75992 14 4.54601 14.109C4.35785 14.2049 4.20487 14.3578 4.10899 14.546C4 14.7599 4 15.0399 4 15.6V18.4C4 18.9601 4 19.2401 4.10899 19.454C4.20487 19.6422 4.35785 19.7951 4.54601 19.891C4.75992 20 5.03995 20 5.6 20Z\" stroke=\"#000000\" stroke-width=\"1.4\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path> </g></svg>\n      </button>\n    `;\n\n    const navItems = navbarNav.querySelectorAll('li.nav-item');\n    if (navItems.length >= 2) {\n      navbarNav.insertBefore(modulesItem, navItems[navItems.length - 1]);\n    } else {\n      navbarNav.appendChild(modulesItem);\n    }\n\n    // console.log(\"[Modules Button] \u2705 Successfully injected into navbar-nav.\");\n    modulesButtonInjected = true;\n    return true;\n  }\n\n  function tryInject(maxAttempts = 10, interval = 500) {\n    let attempts = 0;\n    const attempt = () => {\n      attempts++;\n      const success = injectModulesButton();\n      if (success) {\n        // console.log(\"[Modules Button] \uD83C\uDF89 Injection complete.\");\n      } else if (attempts < maxAttempts) {\n        // console.log(`[Modules Button] \u23F3 Retry ${attempts}/${maxAttempts}...`);\n        setTimeout(attempt, interval);\n      } else {\n        // console.error(\"[Modules Button] \u274C Failed to inject after\", maxAttempts, \"attempts.\");\n      }\n    };\n    attempt();\n  }\n\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => tryInject());\n  } else {\n    tryInject();\n  }\n})();", "(function() {\n    // console.log(\"\uD83D\uDD04 Waiting for GridRow...\");\n\n    function override_gridrow() {\n        if (frappe.ui && frappe.ui.form && frappe.ui.form.GridRow) {\n            // console.log(\"\u2705 Overriding GridRow.get_menu_items\");\n\n            frappe.ui.form.GridRow.prototype.get_menu_items = function () {\n                return [\n                    {\n                        label: __(\"Delete\"),\n                        action: () => this.remove(),\n                        shortcut: \"Shift+Ctrl+D\",\n                    },\n                    {\n                        label: __(\"Close\"),\n                        action: () => this.toggle_view(false),\n                    },\n                ];\n            };\n\n            return true;\n        }\n        return false;\n    }\n\n    // Keep checking until GridRow is loaded\n    const interval = setInterval(() => {\n        if (override_gridrow()) {\n            clearInterval(interval);\n        }\n    }, 200);\n})();\n\n\n\n\n"],
  "mappings": "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",
  "names": ["resolve", "eyeSVG", "eyeSlashSVG", "addCustomPasswordToggle", "input", "wrapper", "button", "style", "mutations", "mutation", "node", "_a", "toggleSearchBar", "path", "searchBar", "toggleBreadCrumb", "breadcrumbs", "initSlidingTabs", "ul", "bar", "update", "active", "linkRect", "ulRect", "left", "e", "link", "scanAndInit", "relocateBreadcrumbs", "sticky", "header", "breadcrumbs", "firstLi", "modulesLink", "li", "attempts", "timer", "applyHide", "route", "isModulesPage", "bc", "initWhenReady", "backButtonInjected", "injectBackButton", "navbarNav", "backItem", "navItems", "shouldHideOnHomePage", "path", "updateVisibility", "backButton", "listItem", "tryInject", "maxAttempts", "interval", "attempt", "modulesButtonInjected", "injectModulesButton", "modulesItem", "override_gridrow", "interval"]
}
